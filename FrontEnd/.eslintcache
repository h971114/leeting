[{"P:\\Leeting\\Git\\FrontEnd\\src\\index.js":"1","P:\\Leeting\\Git\\FrontEnd\\src\\App.js":"2","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Footer.js":"3","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Header.js":"4","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Home.js":"5","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Join.js":"6","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Login.js":"7","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Find.js":"8","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\NotFound.js":"9","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Leeting.js":"10","P:\\Leeting\\working\\FrontEnd\\src\\index.js":"11","P:\\Leeting\\working\\FrontEnd\\src\\App.js":"12","P:\\Leeting\\working\\FrontEnd\\src\\components\\Header.js":"13","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Find.js":"14","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Join.js":"15","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Home.js":"16","P:\\Leeting\\working\\FrontEnd\\src\\components\\Footer.js":"17","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Login.js":"18","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Leeting.js":"19","P:\\Leeting\\working\\FrontEnd\\src\\routes\\NotFound.js":"20","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\exercise.js":"21","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\Detail.js":"22","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\exercise.js":"23","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\music.js":"24","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\game.js":"25","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\lans.js":"26","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\diy.js":"27","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\study.js":"28","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\game.js":"29","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\music.js":"30","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\lans.js":"31","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\diy.js":"32","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\study.js":"33","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\write.js":"34","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\Modify.js":"35","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\my.js":"36"},{"size":233,"mtime":1610882764000,"results":"37","hashOfConfig":"38"},{"size":978,"mtime":1611021590941,"results":"39","hashOfConfig":"38"},{"size":989,"mtime":1610882764000,"results":"40","hashOfConfig":"38"},{"size":1465,"mtime":1611021658582,"results":"41","hashOfConfig":"38"},{"size":6226,"mtime":1611022863176,"results":"42","hashOfConfig":"38"},{"size":18738,"mtime":1610957862905,"results":"43","hashOfConfig":"38"},{"size":3679,"mtime":1611021547690,"results":"44","hashOfConfig":"38"},{"size":5089,"mtime":1610882764000,"results":"45","hashOfConfig":"38"},{"size":1133,"mtime":1610882764000,"results":"46","hashOfConfig":"38"},{"size":309,"mtime":1611023076460,"results":"47","hashOfConfig":"38"},{"size":233,"mtime":1610882764000,"results":"48","hashOfConfig":"49"},{"size":2248,"mtime":1611536282453,"results":"50","hashOfConfig":"49"},{"size":3252,"mtime":1611536282476,"results":"51","hashOfConfig":"49"},{"size":16790,"mtime":1611536282542,"results":"52","hashOfConfig":"49"},{"size":21487,"mtime":1611536282569,"results":"53","hashOfConfig":"49"},{"size":8906,"mtime":1611536282559,"results":"54","hashOfConfig":"49"},{"size":1032,"mtime":1611536282464,"results":"55","hashOfConfig":"49"},{"size":8732,"mtime":1611671433930,"results":"56","hashOfConfig":"49"},{"size":1740,"mtime":1611536282575,"results":"57","hashOfConfig":"49"},{"size":1136,"mtime":1611129546542,"results":"58","hashOfConfig":"49"},{"size":1587,"mtime":1611536282497,"results":"59","hashOfConfig":"49"},{"size":11136,"mtime":1611680697199,"results":"60","hashOfConfig":"49"},{"size":5194,"mtime":1611673634583,"results":"61","hashOfConfig":"49"},{"size":5213,"mtime":1611681324885,"results":"62","hashOfConfig":"49"},{"size":5094,"mtime":1611681290236,"results":"63","hashOfConfig":"49"},{"size":5165,"mtime":1611681330669,"results":"64","hashOfConfig":"49"},{"size":5159,"mtime":1611681386545,"results":"65","hashOfConfig":"49"},{"size":5332,"mtime":1611681318393,"results":"66","hashOfConfig":"49"},{"size":1576,"mtime":1611536282503,"results":"67","hashOfConfig":"49"},{"size":1578,"mtime":1611536282514,"results":"68","hashOfConfig":"49"},{"size":1576,"mtime":1611536282508,"results":"69","hashOfConfig":"49"},{"size":1573,"mtime":1611536282482,"results":"70","hashOfConfig":"49"},{"size":1590,"mtime":1611536282534,"results":"71","hashOfConfig":"49"},{"size":17095,"mtime":1611680034894,"results":"72","hashOfConfig":"49"},{"size":19827,"mtime":1611680879602,"results":"73","hashOfConfig":"49"},{"size":1570,"mtime":1611536282528,"results":"74","hashOfConfig":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"ou3266",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1d1pgq1",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"P:\\Leeting\\Git\\FrontEnd\\src\\index.js",[],["159","160"],"P:\\Leeting\\Git\\FrontEnd\\src\\App.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\components\\Footer.js",["161","162","163"],"import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id=\"footer\">\n        <div className=\"footerdiv\">\n            <ul className=\"fnb\">\n                <li><a href=\"/\">이용약관</a></li>\n                <li><a href=\"/\">개인정보처리방침</a></li>\n            </ul>\n            <ul className=\"ftsns\">\n                <li className=\"insta\"><a href=\"/\" target=\"_blank\"></a></li>\n                <li className=\"youtube\"><a href=\"/\" target=\"_blank\"></a></li>\n                <li className=\"kakao\"><a href=\"/\" target=\"_blank\"></a></li>\n            </ul>\n            <div className=\"fttxt\">\n                고객센터  02-1234-5678  |  평일 상담시간  09:00 ~ 18:00<br/>\n                본 사이트의 콘텐츠는 저작권법의 보호를 받는 바 무단 전재, 복사, 배포 등을 금합니다.<br/>\n                Copyright © Leeting All Rights Reserved.\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Footer;","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Header.js",["164","165","166","167"],"import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div id=\"header\">\n        <div className=\"gtop\">\n            <div className=\"dvwrap\">\n            <a className=\"logo\" href=\"/\">\n                Leeting입니다\n            </a>\n            <div className=\"topsearch\">\n                <form name=\"searchForm\">\n                          <input type=\"text\" name=\"searchVal\" placeholder=\"검색어를 입력하세요\">\n                              </input>\n                    <a href=\"#\">검색</a>\n                </form>\n            </div>\n            <ul>\n                <li><a href=\"/join\">회원가입</a></li>\n                <li><a href=\"/Login\">로그인</a></li>\n            </ul>\n        </div>\n        </div>\n        <div className=\"headerWrap\">\n            <div className=\"gnb cB\" id=\"gnb\">\n                <ul className=\"topmenu\" id=\"head-menu\">\n                    <li className=\"lnb1\">\n                        <a href=\"/Leeting\">Leeting</a>\n                    </li>\n                    <li className=\"lnb2\">\n                        <a href=\"#\" >메뉴2</a>\n                    </li>\n                    <li className=\"lnb3\">\n                        <a href=\"#\" >메뉴3</a>\n                    </li>\n                    <li className=\"lnb4\">\n                        <a href=\"#\" >메뉴4</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Header;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Home.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Join.js",["168","169","170","171","172"],"import React from \"react\";\nimport \"./Join.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\nclass Join extends React.Component {\n  \n  constructor(props) {\n      super(props);\n    this.state = {\n      value: 'kakao.com',\n      checkId: false,\n      checkPw: false,\n      checkName: false,\n      checkNickname: false,\n      checkEmail: false,\n      checkMobile: false\n    };\n  }\n  state ={\n    id: \"\",\n    pw: \"\",\n    name: \"\",\n    nickname: \"\",\n    email: \"\",\n    domain: \"\",\n    mobile: \"\",\n  }\n  \n  handleChange = (event) => {\n    if (event.target.value != '직접입력') {\n      this.setState({\n        value: event.target.value,\n        domain: event.target.value,\n        checkEmail: true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(event.target.value);\n      document.getElementById('validateDomain').textContent = \"\";\n          document.getElementById('writedomain').value = event.target.value;\n          document.getElementById('writedomain').readOnly=true;\n      }\n    else {\n      this.setState({\n        value: event.target.value,\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('writedomain').readOnly = false;\n          document.getElementById('writedomain').value = \"\";\n          document.getElementById('writedomain').placeholder = \"입력하세요\";\n      }\n  }\n  idChange = (e) => {\n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      document.getElementById('validateId').textContent = \"아이디는 영어 소문자로 시작하는 6~20자 영어 소문자 또는 숫자이어야 합니다.\";\n      document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateId').textContent = \"\";\n      this.setState({\n          id: e.target.value,\n      });\n    }\n  };\n  \n  pwChange = (e) => {\n    var pwReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\n    \n    if (!pwReg.test(e.target.value)) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePw').textContent = \"비밀번호는 8자 이상의 문자, 숫자, 특수 문자 조합이어야 합니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validatePw').textContent = \"사용가능한 비밀번호 입니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color:blue');\n      this.setState({\n          pw: e.target.value,\n          checkPw:true\n      }); \n    }\n\n    \n    if (document.getElementById('inputCPw').value != e.target.value) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    else{\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n        // document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n\n    // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n    //   document.getElementById('joinbtn').disabled = false;\n    // }\n    // console.log(this.state.checkPw);\n  };\n\n  cpwChange = (e) => {\n    if (e.target.value === '') {\n      this.setState({\n        checkPw: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"\";\n    }\n    else if (document.getElementById('inputPw').value === e.target.value) {\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n    else {\n      this.setState({\n        checkPw: false\n      });\n      \n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    // console.log(this.state.checkPw);\n  };\n\n  nameChange = (e) => {\n    var nameReg = /^[가-힣]{2,4}$/g;\n    if (!nameReg.test(e.target.value)) {\n      this.setState({\n        checkName: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateName').textContent = \"이름은 2~4자 사이의 한국어 입니다.\";\n      document.getElementById('validateName').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateName').textContent = \"\";\n      this.setState({\n        name: e.target.value,\n        checkName:true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n    }\n  };\n\n  nicknameChange = (e) => {\n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      this.setState({\n        checkNickname: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateNickName').textContent = \"닉네임은 2~10자 사이의 한국어, 영어, 숫자로 이루어져 있습니다.\";\n    }\n    else {\n      document.getElementById('validateNickName').textContent = \"\";\n      this.setState({\n        nickname: e.target.value,\n      });\n      // console.log(e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkNickname);\n    }\n  };\n  emailChange = (e) => {\n    this.setState({\n        email: e.target.value,\n    });\n  };\n  domainChange = (e) => {\n    var domainReg = /^([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){2,3}$/g;\n    if (!domainReg.test(e.target.value)) {\n      this.setState({\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateDomain').textContent = \"정확한 도메인을 입력해주세요\";\n      document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log('test1 : ' + this.state.checkEmail);\n      this.setState({\n        checkEmail: true\n      });\n      // console.log('test2 : ' + e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log('test3 : ' + this.state.checkEmail);\n      document.getElementById('validateDomain').textContent = \"\";\n    }\n  };\n  mobileChange = (e) => {\n    var phoneReg = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n    if (!phoneReg.test(e.target.value)) {\n      this.setState({\n        checkMobile: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePhone').textContent = \"휴대폰 번호는 010-1234-5678 형식으로 입력해주세요.\";\n      document.getElementById('validatePhone').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log(this.state.checkMobile);\n      this.setState({\n        mobile: e.target.value,\n        checkMobile:true\n      });\n      // console.log('test1 : ' + e.target.value);\n      document.getElementById('validatePhone').textContent = \"\";\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkMobile);\n    }\n    \n  };\n  sameClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/same', {\n        id: this.state.id\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkId: true\n          });\n          document.getElementById('validateId').textContent = \"사용가능한 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkId: false\n          });\n          // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('validateId').textContent = \"이미 존재하는 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n\n  sameNickClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/samenick', {\n        nickname: this.state.nickname\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkNickname: true\n          });\n          document.getElementById('validateNickName').textContent = \"사용가능한 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkNickname: false\n          });\n          document.getElementById('validateNickName').textContent = \"이미 존재하는 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      axios.post('http://127.0.0.1:8080/myapp/member/join', {\n        id: this.state.id,\n        pw: this.state.pw,\n        nickname: this.state.nickname,\n        name: this.state.name,\n        email: this.state.email + \"@\" + this.state.domain,\n        mobile : this.state.mobile\n      }).then(res => {\n        //console.log(res);\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          alert(\"환영합니다~ 로그인 페이지로 이동합니다.\");\n          console.log(\"회원가입 완료\");\n          this.props.history.push('/login');\n        }\n        else {\n          alert(\"회원가입에 실패하였습니다. 메인 페이지로 이동합니다.\");\n          console.log(\"회원가입 실패\");\n          this.props.history.push('/');\n        }\n      })\n    }\n    else {\n      alert(\"입력 정보를 확인해주세요!\");\n      console.log(\"미입력여부\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"joinContainer\">\n        <h1 className=\"tit\">회 원 가 입</h1>\n        <hr />\n        <div className=\"formcenter\">\n          <div>\n            {/* <form action=\"submit\" className=\"signupcustom\" > */}\n              \n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelId\" className=\"font-weight-bold\" htmlFor=\"inputId\">아이디</label>\n                <input type=\"text\" name=\"uid\" id=\"inputId\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\n                <button id=\"checkId\" className=\"btn\" onClick={this.sameClick}>중복 확인</button>\n                </div>\n                <label id=\"validateId\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label id=\"labelPw\" className=\"font-weight-bold\" htmlFor=\"inputPw\">비밀번호</label>\n                  <input type=\"password\" id=\"inputPw\" className=\"form-control margin-bottom-20\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\n                </div>\n                <label id=\"validatePw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelCPw\" htmlFor=\"inputCPw\">비밀번호 확인</label>\n                  <input type=\"password\" id=\"inputCPw\" className=\"form-control margin-bottom-20\" placeholder=\"확인용 비밀번호를 입력해주세요\" onChange={this.cpwChange}></input>\n                </div>\n                <label id=\"validateCPw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelName\" htmlFor=\"inputName\">성명</label>\n                  <input type=\"text\" id=\"inputName\" className=\"form-control margin-bottom-20\" placeholder=\"한글 이름을 입력해주세요\" onChange ={this.nameChange}></input>\n                </div>\n                <label id=\"validateName\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label className=\"font-weight-bold\" id=\"labelNickName\" htmlFor=\"inputNickName\">닉네임</label>\n                <input type=\"text\" id=\"inputNickName\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"닉네임을 입력해주세요\" onChange={this.nicknameChange}></input>\n                <button id=\"checkNickName\" className=\"btn\" onClick={this.sameNickClick}>중복 확인</button>\n                </div>\n                <label id=\"validateNickName\"></label>\n              </div>\n            <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"email\">이메일</label>\n                  <input type=\"text\" id=\"email\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.emailChange}></input>\n                  &nbsp;<label id=\"at\">@</label>&nbsp;\n                  <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" placeholder=\"kakao.com\" onChange={this.domainChange} readOnly></input>&nbsp;\n                  <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                          <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                          <option value=\"naver.com\">naver.com</option>\n                          <option value=\"daum.net\">daum.net</option>\n                          <option value=\"직접입력\">직접입력</option>\n                  </select>\n                </div>\n                <label id=\"validateDomain\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelPhone\" htmlFor=\"inputPhone\">휴대전화 번호</label>\n                  <input type=\"tel\" id=\"inputPhone\" className=\"form-control margin-bottom-20\" placeholder=\"휴대폰 번호를 입력해주세요\" onChange={this.mobileChange}></input>\n                </div>\n                <label id=\"validatePhone\"></label>\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <div className=\"col-12 text-center\">\n                  <input type=\"checkbox\" id=\"checkjoin\"></input>&nbsp;\n                    <label htmlFor=\"checkjoin\"><span></span> Leeting의 이용약관, 개인정보취급방침 및 개인정보3자제공에 동의합니다.</label>\n                </div>\n              </div>\n              <br />\n              <div className=\"row form-group\">\n                <div className=\"col-6 text-right\">\n                  <a href=\"\" className=\"btn btn-light\">돌아가기</a>\n                </div>\n                <div className=\"col-6\">\n                  <button type=\"submit\" id=\"joinbtn\" className=\"btn btn-primary\" onClick={this.handleClick}>가입하기</button>\n                </div>\n              </div>\n              \n            {/* </form> */}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Join;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Login.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Find.js",["173"],"import React from \"react\";\nimport \"./Find.css\";\n\nclass Find extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '선택하세요' };\n    }\n    handleChange = (event) => {\n        this.setState({ value: event.target.value });\n        if (event.target.value != '직접입력') {\n            document.getElementById('writedomain').value = event.target.value;\n            document.getElementById('writedomain').readOnly=true;\n        }\n        else {\n            document.getElementById('writedomain').readOnly = false;\n            document.getElementById('writedomain').value = \"\";\n            document.getElementById('writedomain').placeholder = \"입력하세요\";\n        }\n    }\n    render() {\n        return (\n            <div className=\"findcontainer\">\n                <div className=\"titles\">\n                    <h1 className=\"tit\">아이디 / 비밀번호 찾기</h1>\n                    <p className=\"subtit\">아이디와 비밀번호는 가입시 입력하신 이메일을 통해 찾을 수 있습니다.</p>\n                </div>\n                <hr />\n                <div className=\"formcenter\">\n                    <input id=\"tab1\" type=\"radio\" name=\"tabs\" defaultChecked></input>\n                    <label className=\"forradio\" htmlFor=\"tab1\">아이디 찾기</label>\n                    <input id=\"tab2\" type=\"radio\" name=\"tabs\"></input>\n                    <label className=\"forradio\" htmlFor=\"tab2\">비밀번호 찾기</label>\n\n                    <form id=\"findids\">\n                        <label className=\"forname\" htmlFor=\"name\">이름</label>\n                        <input type=\"text\" id=\"name\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\"></input>\n                        <label id=\"labelemail\" className=\"foremail\" htmlFor=\"email\">이메일</label>\n                        <input type=\"text\" id=\"email\" name=\"inputemail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\"></input>\n                        &nbsp;<label id=\"at\">@</label>&nbsp;\n                        <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-3 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" readOnly></input>&nbsp;\n                        <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                                <option value=\"naver.com\">naver.com</option>\n                                <option value=\"daum.net\">daum.net</option>\n                                <option value=\"직접입력\">직접입력</option>\n                        </select>\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button  className=\"btn find\">아이디 찾기</button>\n                        </div>\n                    </form>\n                    <form id=\"findpws\">\n                        <label className=\"forname\" htmlFor=\"name\">이름</label>\n                        <input type=\"text\" id=\"name\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\"></input>\n                        <label className=\"forid\" htmlFor=\"id\">아이디</label>\n                        <input type=\"text\" id=\"id\" name=\"inputid\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"아이디를 입력해주세요\"></input>\n                        <label id=\"labelemail\" className=\"foremail\" htmlFor=\"email\">이메일</label>\n                        <input type=\"text\" id=\"email\" name=\"inputemail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\"></input>\n                        &nbsp;<label id=\"at\">@</label>&nbsp;\n                        <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-3 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" readOnly></input>&nbsp;\n                        <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                                <option value=\"naver.com\">naver.com</option>\n                                <option value=\"daum.net\">daum.net</option>\n                                <option value=\"직접입력\">직접입력</option>\n                        </select>\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button  className=\"btn find\">비밀번호 찾기</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Find;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\NotFound.js",["174","175"],"import React, { useEffect } from 'react';\nimport \"./NotFound.css\"\n\nfunction NotFound({ history }) {\n    const goBack = () => {\n        history.goBack();\n    };\n    const goHome = () => {\n        history.push('/');\n      };\n    \n      useEffect(() => {\n        console.log(history);\n        const unblock = history.block('정말 떠나실건가요?');\n        return () => {\n          unblock();\n        };\n      }, [history]);\n    \n    return (\n        <div className='notFoundCon'>\n            <img src=\"img/404error.png\" alt=\"404에러\"></img>\n            <p className=\"tit\">페이지를 <span>찾을 수 없습니다.</span><br />\n            (404 Not Found)</p>\n            <p className=\"subtit\">페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.<br />\n            입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\n\n            <div className=\"btndiv\">\n                <a className=\"goBack\" onClick={goBack}>이전 화면</a>\n                <a className=\"goHome\" onClick={goHome}>홈으로</a>\n            </div>\n        </div>\n    );\n}\n\nexport default NotFound;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Leeting.js",["176"],"import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"./Slider.css\";\r\nimport \"./Home.css\";\r\n\r\nclass Leeting extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"main_content\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Leeting;","P:\\Leeting\\working\\FrontEnd\\src\\index.js",[],["177","178"],"P:\\Leeting\\working\\FrontEnd\\src\\App.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\Header.js",["179","180","181","182"],"import React, { Component } from 'react';\nimport \"./Header.css\";\n\nclass Header extends Component {\n    \n    state = {\n        token: ''\n    }\n    componentDidMount() {\n        // nologin = React.createRef();\n    if (sessionStorage.getItem(\"token\") != null) {\n        console.log(\"로그인\");\n        // this.nologin.Attribute('style', 'display:none');\n        document.getElementById('nologin').setAttribute('style', 'display:none');\n        document.getElementById('login').setAttribute('style', 'display:block');\n        // document.getElementsByClassName(\"nologin\").setAttribute('style', 'display:none');\n        // document.getElementsByClassName(\"login\").setAttribute('style', 'display:block');\n    }\n    else {\n        console.log(\"노로그인\");\n        document.getElementById('login').setAttribute('style', 'display:none');\n        document.getElementById('nologin').setAttribute('style', 'display:block');\n    }\n    }\n    logout = (e) => {\n        window.sessionStorage.clear();\n        window.location.replace(\"/\");\n    };\n    render(){\n        return (\n            <div id=\"header\">\n                <div className=\"gtop\">\n                    <div className=\"dvwrap\">\n                    <a className=\"logo\" href=\"/\">\n                        Leeting입니다\n                    </a>\n                    <div className=\"topsearch\">\n                        <form name=\"searchForm\">\n                            <input type=\"text\" name=\"searchVal\" placeholder=\"검색어를 입력하세요\">\n                            </input>\n                            <a href=\"#\">검색</a>\n                        </form>\n                    </div>\n                    <div id=\"nologin\">\n                        <ul>\n                            <li><a href=\"/join\">회원가입</a></li>\n                            <li><a href=\"/Login\">로그인</a></li>\n                        </ul>\n                    </div>\n                    <div id=\"login\">\n                        <ul>\n                            <li><a href=\"/\">{sessionStorage.getItem(\"nickname\")}님 환영합니다</a></li>\n                            <li><a onClick={this.logout}>로그아웃</a></li>\n                        </ul>\n                    </div>\n                </div>\n                </div>\n                <div className=\"headerWrap\">\n                    <div className=\"gnb cB\" id=\"gnb\">\n                        <ul className=\"topmenu\" id=\"head-menu\">\n                            <li className=\"lnb1\">\n                                <a href=\"/Leeting\">Leeting 소개</a>\n                            </li>\n                            <li className=\"lnb2\">\n                                <a href=\"/meeting/exercise\" >Leeting's</a>\n                            </li>\n                            <li className=\"lnb3\">\n                                <a href=\"#\" >메뉴3</a>\n                            </li>\n                            <li className=\"lnb4\">\n                                <a href=\"#\" >메뉴4</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n  \n}\n\nexport default Header;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Find.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\Join.js",["183"],"import React from \"react\";\nimport \"./Join.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\nclass Join extends React.Component {\n  constructor(props) {\n      super(props);\n    this.state = {\n      value: '선택하세요',\n      checkId: false,\n      checkPw: false,\n      checkName: false,\n      checkNickname: false,\n      checkEmail: false,\n      checkMobile: false\n    };\n  }\n  state ={\n    id: \"\",\n    pw: \"\",\n    name: \"\",\n    nickname: \"\",\n    email: \"\",\n    domain: \"\",\n    mobile: \"\",\n    token:\"\",\n    auth:\"\",\n  }\n  \n  handleChange = (event) => {\n    if (event.target.value !== '직접입력') {\n      this.setState({\n        value: event.target.value,\n        domain: event.target.value,\n        checkEmail: true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(event.target.value);\n      document.getElementById('validateDomain').textContent = \"\";\n          document.getElementById('writedomain').value = event.target.value;\n          document.getElementById('writedomain').readOnly=true;\n      }\n    else {\n      this.setState({\n        value: event.target.value,\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('writedomain').readOnly = false;\n          document.getElementById('writedomain').value = \"\";\n          document.getElementById('writedomain').placeholder = \"입력하세요\";\n      }\n  }\n  idChange = (e) => {\n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      document.getElementById('validateId').textContent = \"아이디는 영어 소문자로 시작하는 6~20자 영어 소문자 또는 숫자이어야 합니다.\";\n      document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateId').textContent = \"\";\n      this.setState({\n          id: e.target.value,\n      });\n    }\n  };\n  \n  pwChange = (e) => {\n    var pwReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\n    \n    if (!pwReg.test(e.target.value)) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePw').textContent = \"비밀번호는 8자 이상의 문자, 숫자, 특수 문자 조합이어야 합니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validatePw').textContent = \"사용가능한 비밀번호 입니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color:blue');\n      this.setState({\n          pw: e.target.value,\n          checkPw:true\n      }); \n    }\n\n    \n    if (document.getElementById('inputCPw').value !== e.target.value) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    else{\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n        // document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n\n    // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n    //   document.getElementById('joinbtn').disabled = false;\n    // }\n    // console.log(this.state.checkPw);\n  };\n\n  cpwChange = (e) => {\n    if (e.target.value === '') {\n      this.setState({\n        checkPw: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"\";\n    }\n    else if (document.getElementById('inputPw').value === e.target.value) {\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n    else {\n      this.setState({\n        checkPw: false\n      });\n      \n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    // console.log(this.state.checkPw);\n  };\n\n  nameChange = (e) => {\n    var nameReg = /^[가-힣]{2,4}$/g;\n    if (!nameReg.test(e.target.value)) {\n      this.setState({\n        checkName: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateName').textContent = \"이름은 2~4자 사이의 한국어 입니다.\";\n      document.getElementById('validateName').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateName').textContent = \"\";\n      this.setState({\n        name: e.target.value,\n        checkName:true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n    }\n  };\n\n  nicknameChange = (e) => {\n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      this.setState({\n        checkNickname: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateNickName').textContent = \"닉네임은 2~10자 사이의 한국어, 영어, 숫자로 이루어져 있습니다.\";\n    }\n    else {\n      document.getElementById('validateNickName').textContent = \"\";\n      this.setState({\n        nickname: e.target.value,\n      });\n      // console.log(e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkNickname);\n    }\n  };\n  emailChange = (e) => {\n    this.setState({\n        email: e.target.value,\n    });\n  };\n  domainChange = (e) => {\n    var domainReg = /^([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){2,3}$/g;\n    if (!domainReg.test(e.target.value)) {\n      this.setState({\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      // document.getElementById('validateDomain').textContent = \"정확한 도메인을 입력해주세요\";\n      // document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateDomain').textContent = \"\";\n    }\n  };\n  mobileChange = (e) => {\n    var phoneReg = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n    if (!phoneReg.test(e.target.value)) {\n      this.setState({\n        checkMobile: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePhone').textContent = \"휴대폰 번호는 010-1234-5678 형식으로 입력해주세요.\";\n      document.getElementById('validatePhone').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log(this.state.checkMobile);\n      this.setState({\n        mobile: e.target.value,\n        checkMobile:true\n      });\n      // console.log('test1 : ' + e.target.value);\n      document.getElementById('validatePhone').textContent = \"\";\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkMobile);\n    }\n    \n  };\n  sameClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/same', {\n        id: this.state.id\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkId: true\n          });\n          document.getElementById('validateId').textContent = \"사용가능한 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkId: false\n          });\n          // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('validateId').textContent = \"이미 존재하는 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n\n  sameNickClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/samenick', {\n        nickname: this.state.nickname\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkNickname: true\n          });\n          document.getElementById('validateNickName').textContent = \"사용가능한 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkNickname: false\n          });\n          document.getElementById('validateNickName').textContent = \"이미 존재하는 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n\n  /*인증번호 전송*/\n  authCheck = (e) => {\n    e.preventDefault();\n    console.log(this.state.email + \"@\" + this.state.domain);\n    axios.post('http://127.0.0.1:8080/myapp/member/email', {\n      samecheck:\"\",\n        email: this.state.email + \"@\" + this.state.domain,\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        this.setState({\n          token: res.data\n        })\n        if (res.data === \"FAIL\") {\n          document.getElementById('validateDomain').textContent = \"이미 가입된 이메일입니다.\";\n          document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n        } else {\n          document.getElementById('auth').disabled = false;\n          // document.getElementById('sendtoken').setAttribute('style', 'display:none');\n          document.getElementById('checktoken').setAttribute('style', 'display:inline-block'); \n        }\n      })\n  };\n\n  authChange = (e) => {\n    this.setState({\n      auth: e.target.value\n    });\n  }\n  emailtokenCheck = (e) => {\n    e.preventDefault();\n\n    console.log(this.state.auth);\n    console.log(this.state.token);\n\n    axios.post('http://127.0.0.1:8080/myapp/member/auth', {\n      token: this.state.token,\n      auth: this.state.auth,      \n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        if (res.data === \"SUCCESS\") {\n          this.setState({\n            checkEmail: true\n          });\n          document.getElementById('auth').disabled = true;\n          document.getElementById('sendtoken').setAttribute('style', 'display:none');\n          document.getElementById('checktoken').setAttribute('style', 'display:none');\n        \n          document.getElementById('validateDomain').textContent = \"인증번호가 확인되었습니다.\";\n          document.getElementById('validateDomain').setAttribute('style', 'color: blue');\n        } else {\n          document.getElementById('sendtoken').setAttribute('style', 'display:inline-block');\n          document.getElementById('validateDomain').textContent = \"인증번호를 재확인해주세요\";\n          document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n        }\n      })\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      axios.post('http://127.0.0.1:8080/myapp/member/join', {\n        id: this.state.id,\n        pw: this.state.pw,\n        nickname: this.state.nickname,\n        name: this.state.name,\n        email: this.state.email + \"@\" + this.state.domain,\n        mobile : this.state.mobile\n      }).then(res => {\n        //console.log(res);\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          alert(\"환영합니다~ 로그인 페이지로 이동합니다.\");\n          console.log(\"회원가입 완료\");\n          this.props.history.push('/login');\n        }\n        else {\n          alert(\"회원가입에 실패하였습니다. 메인 페이지로 이동합니다.\");\n          console.log(\"회원가입 실패\");\n          this.props.history.push('/');\n        }\n      })\n    }\n    else {\n      alert(\"입력 정보를 확인해주세요!\");\n      console.log(\"미입력여부\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"joinContainer\">\n        <h1 className=\"tit\">회 원 가 입</h1>\n        <hr />\n        <div className=\"formcenter\">\n          <div>\n            {/* <form action=\"submit\" className=\"signupcustom\" > */}\n              \n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelId\" className=\"font-weight-bold\" htmlFor=\"inputId\">아이디</label>\n                <input type=\"text\" name=\"uid\" id=\"inputId\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\n                <button id=\"checkId\" className=\"btn\" onClick={this.sameClick}>중복 확인</button>\n                </div>\n                <label id=\"validateId\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label id=\"labelPw\" className=\"font-weight-bold\" htmlFor=\"inputPw\">비밀번호</label>\n                  <input type=\"password\" id=\"inputPw\" className=\"form-control margin-bottom-20\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\n                </div>\n                <label id=\"validatePw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelCPw\" htmlFor=\"inputCPw\">비밀번호 확인</label>\n                  <input type=\"password\" id=\"inputCPw\" className=\"form-control margin-bottom-20\" placeholder=\"확인용 비밀번호를 입력해주세요\" onChange={this.cpwChange}></input>\n                </div>\n                <label id=\"validateCPw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelName\" htmlFor=\"inputName\">성명</label>\n                  <input type=\"text\" id=\"inputName\" className=\"form-control margin-bottom-20\" placeholder=\"한글 이름을 입력해주세요\" onChange ={this.nameChange}></input>\n                </div>\n                <label id=\"validateName\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label className=\"font-weight-bold\" id=\"labelNickName\" htmlFor=\"inputNickName\">닉네임</label>\n                <input type=\"text\" id=\"inputNickName\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"닉네임을 입력해주세요\" onChange={this.nicknameChange}></input>\n                <button id=\"checkNickName\" className=\"btn\" onClick={this.sameNickClick}>중복 확인</button>\n                </div>\n                <label id=\"validateNickName\"></label>\n              </div>\n            <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"email\">이메일</label>\n                  <input type=\"text\" id=\"email\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.emailChange}></input>\n                  &nbsp;<label id=\"at\">@</label>&nbsp;\n                  <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" onChange={this.domainChange} readOnly></input>&nbsp;\n                  <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                          <option value=\"선택하세요\" defaultValue>선택하세요</option>\n                          <option value=\"kakao.com\" >kakao.com</option>\n                          <option value=\"naver.com\">naver.com</option>\n                          <option value=\"daum.net\">daum.net</option>\n                          <option value=\"직접입력\">직접입력</option>\n                  </select>\n              </div>\n              <div className=\"col-12\">\n                <input type=\"text\" id=\"auth\" className=\"form-control col-4 margin-bottom-20\" onChange={this.authChange} disabled></input>\n                <button id=\"sendtoken\" className=\"btn\" onClick={this.authCheck}>인증번호 전송</button>\n                <button id=\"checktoken\" className=\"btn\" onClick={this.emailtokenCheck}>인증번호 확인</button>\n              </div>\n                <label id=\"validateDomain\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelPhone\" htmlFor=\"inputPhone\">휴대전화 번호</label>\n                  <input type=\"tel\" id=\"inputPhone\" className=\"form-control margin-bottom-20\" placeholder=\"휴대폰 번호를 입력해주세요\" onChange={this.mobileChange}></input>\n                </div>\n                <label id=\"validatePhone\"></label>\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <div className=\"col-12 text-center\">\n                  <input type=\"checkbox\" id=\"checkjoin\"></input>&nbsp;\n                    <label htmlFor=\"checkjoin\"><span></span> Leeting의 이용약관, 개인정보취급방침 및 개인정보3자제공에 동의합니다.</label>\n                </div>\n              </div>\n              <br />\n              <div className=\"row form-group\">\n                <div className=\"col-6 text-right\">\n                  <a href=\"\" className=\"btn btn-light\">돌아가기</a>\n                </div>\n                <div className=\"col-6\">\n                  <button type=\"submit\" id=\"joinbtn\" className=\"btn btn-primary\" onClick={this.handleClick}>가입하기</button>\n                </div>\n              </div>\n              \n            {/* </form> */}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Join;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Home.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\Footer.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\Login.js",["184","185"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"./Login.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport  KaKaoLogin  from 'react-kakao-login';\r\n\r\nconst responseGoogle = (response) => {\r\n  console.log(response);\r\n}\r\n\r\n\r\nclass Login extends React.Component {\r\n    state ={\r\n        id: \"\",\r\n        pw: \"\",\r\n    }\r\n    google(result) {\r\n        axios.post('http://127.0.0.1:8080/myapp/member/google', {\r\n            result\r\n        }).then(res => {\r\n            // console.log(res);\r\n            console.log(this.state.id);\r\n            console.log(this.state.pw);\r\n            console.log(res.data.message);\r\n            if (res.data.message === \"SUCCESS\") {\r\n                sessionStorage.setItem(\"token\", res.data.token);\r\n                sessionStorage.setItem(\"nickname\", res.data.nickname);\r\n                sessionStorage.setItem(\"id\", res.data.id);\r\n                window.location.replace(\"/\");\r\n            } else {\r\n                alert(\"아이디와 비밀번호를 확인해주세요.\");\r\n            }\r\n        })\r\n    }\r\n    kakao(result) {\r\n        console.log(result);\r\n        axios.post('http://127.0.0.1:8080/myapp/member/kakao', {\r\n            result\r\n        }).then(res => {\r\n            // console.log(res);\r\n            console.log(this.state.id);\r\n            console.log(this.state.pw);\r\n            console.log(res.data.message);\r\n            if (res.data.message === \"SUCCESS\") {\r\n                sessionStorage.setItem(\"token\", res.data.token);\r\n                sessionStorage.setItem(\"nickname\", res.data.nickname);\r\n                sessionStorage.setItem(\"id\", res.data.id);\r\n                window.location.replace(\"/\");\r\n            } else {\r\n                alert(\"아이디와 비밀번호를 확인해주세요.\");\r\n            }\r\n        })\r\n    }\r\n    Naver = () => {\r\n        var location = this.state.currentLocation;\r\n            var link = 'http://127.0.0.1:8080/myapp/member/naver'\r\n            window.location.assign(link);\r\n        };\r\n    componentDidMount() {\r\n        const search = this.props.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const code = params.get('code');\r\n        const state = params.get('state');\r\n        console.log(code);\r\n        console.log(state);\r\n        if (code != null && state != null) {\r\n            axios.get('http://127.0.0.1:8080/myapp/member/naver/callback1', {\r\n                params: {\r\n                    code: code,\r\n                    state : state\r\n                }\r\n            }).then(res => {\r\n                console.log(res.data);\r\n                if (res.data.message === \"SUCCESS\") {\r\n                    sessionStorage.setItem(\"token\", res.data.token);\r\n                    sessionStorage.setItem(\"nickname\", res.data.nickname);\r\n                    sessionStorage.setItem(\"id\", res.data.id);\r\n                    window.location.replace(\"/\");\r\n                } else {\r\n                    alert(\"아이디와 비밀번호를 확인해주세요.\");\r\n                }\r\n            })\r\n        }\r\n    };\r\n    handleClick = (e) => {\r\n        // e.preventDefault();\r\n        axios.post('http://127.0.0.1:8080/myapp/member/login', {\r\n            id: this.state.id,\r\n            pw: this.state.pw\r\n        }).then(res => {\r\n            // console.log(res);\r\n            console.log(this.state.id);\r\n            console.log(this.state.pw);\r\n            console.log(res.data.message);\r\n            if (res.data.message === \"SUCCESS\") {\r\n                sessionStorage.setItem(\"token\", res.data.token);\r\n                sessionStorage.setItem(\"nickname\", res.data.nickname);\r\n                sessionStorage.setItem(\"id\", res.data.id);\r\n                window.location.replace(\"/\");\r\n            } else {\r\n                alert(\"아이디와 비밀번호를 확인해주세요.\");\r\n            }\r\n        })\r\n    };\r\n    idChange = (e) => {\r\n        this.setState({\r\n            id: e.target.value,\r\n        });\r\n    };\r\n    pwChange = (e) => {\r\n        this.setState({\r\n            pw: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleKeyPress = (e) => {\r\n        // if(e.charCode === 13) { //  deprecated\r\n        //   this.handleClick();\r\n        // }\r\n    \r\n        if (e.key === \"Enter\") {\r\n          this.handleClick();\r\n        }\r\n      };\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"logincontainer\">\r\n                <h1 className=\"tit\">로 그 인</h1>\r\n                <hr />\r\n                <div className=\"formcenter\">\r\n                    <form action=\"get\" className=\"loginform\">\r\n                        <div className=\"id\">\r\n                            <p>아이디 </p>\r\n                            <input type=\"text\" className=\"form-control col-9 margin-bottom-20 logininput\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\r\n                        </div>\r\n                        <div className=\"password\">\r\n                            <p>비밀번호 </p>\r\n                            <input type=\"password\" className=\"form-control col-9 margin-bottom-20 passinput\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange} onKeyPress={this.handleKeyPress}></input>\r\n                        </div>\r\n                        <div className=\"col-9 chkbox\">\r\n                            <div className=\"idstore\">\r\n                                <input type=\"checkbox\" id=\"idcheck\"></input>&nbsp;\r\n                            <label htmlFor=\"idcheck\"><span></span>아이디 저장</label>\r\n                            </div>\r\n                            <div className=\"autologin\">\r\n                                <input type=\"checkbox\" id=\"autocheck\"></input>&nbsp;\r\n                            <label htmlFor=\"autocheck\"><span></span>자동 로그인</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"loginset\">\r\n                            <div className=\"col-9 defaultlogin\" onClick ={this.handleClick}>로 그 인</div>\r\n                            <div className=\"col-9 naverlogin\" onClick={this.Naver}>네이버 로그인</div>\r\n                            <GoogleLogin\r\n                                clientId=\"214779194973-13gfcp2vgimelc91u2dpop5j3oo788qb.apps.googleusercontent.com\"\r\n                                render={renderProps => (\r\n                                    <div className=\"col-9 googlelogin\" onClick={renderProps.onClick}> 구글 로그인</div>\r\n                                  )}\r\n                            buttonText=\"Login\"\r\n                            onSuccess={result => this.google(result)}\r\n                            onFailure={result => console.log(result)}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            />\r\n                                <KaKaoLogin\r\n                                    token={'e3cd9e3a0f32bc890bacfd0ca81c18e7'}\r\n                                    onSuccess={result =>this.kakao(result)}\r\n                                getProfile={true}\r\n                                render={({ onClick }) => {\r\n                                    return (\r\n                                        <div className=\"col-9 kakaologin\" onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            onClick();\r\n                                          }}>카카오 계정 로그인</div>\r\n                                        \r\n                                    )\r\n                                }}\r\n                                    >\r\n                                    \r\n                                </KaKaoLogin>\r\n                        </div>\r\n                        <div className=\"col-9 usermenu\">\r\n                            <ul>\r\n                                <li>\r\n                                    <a href=\"/find\">\r\n                                        <img src=\"img/find.png\" alt=\"아이디 찾기\"></img><br />\r\n                                    아이디 / 비밀번호 찾기\r\n                                </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"/join\">\r\n                                        <img src=\"img/join.png\" alt=\"회원 가입\"></img><br />\r\n                                    회원 가입\r\n                                </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Leeting.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\NotFound.js",["186","187"],"import React, { useEffect } from 'react';\nimport \"./NotFound.css\"\n\nfunction NotFound({ history }) {\n    const goBack = () => {\n        history.goBack();\n    };\n    const goHome = () => {\n        history.push('/');\n      };\n    \n      useEffect(() => {\n        console.log(history);\n        const unblock = history.block('정말 떠나실건가요?');\n        return () => {\n          unblock();\n        };\n      }, [history]);\n    \n    return (\n        <div className='notFoundCon'>\n            <img src=\"../img/404error.png\" alt=\"404에러\"></img>\n            <p className=\"tit\">페이지를 <span>찾을 수 없습니다.</span><br />\n            (404 Not Found)</p>\n            <p className=\"subtit\">페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.<br />\n            입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\n\n            <div className=\"btndiv\">\n                <a className=\"goBack\" onClick={goBack}>이전 화면</a>\n                <a className=\"goHome\" onClick={goHome}>홈으로</a>\n            </div>\n        </div>\n    );\n}\n\nexport default NotFound;","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\exercise.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\Detail.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\exercise.js",["188","189","190","191","192"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\music.js",["193","194","195","196","197","198"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\game.js",["199","200","201","202","203"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\lans.js",["204","205","206","207","208"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\diy.js",["209","210","211","212","213"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\study.js",["214","215","216","217","218"],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\game.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\music.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\lans.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\diy.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\study.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\write.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\Modify.js",["219","220","221","222"],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\my.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":13,"column":39,"nodeType":"229","endLine":13,"endColumn":67},{"ruleId":"227","severity":1,"message":"228","line":14,"column":41,"nodeType":"229","endLine":14,"endColumn":69},{"ruleId":"227","severity":1,"message":"228","line":15,"column":39,"nodeType":"229","endLine":15,"endColumn":67},{"ruleId":"230","severity":1,"message":"231","line":16,"column":21,"nodeType":"229","endLine":16,"endColumn":33},{"ruleId":"230","severity":1,"message":"231","line":32,"column":25,"nodeType":"229","endLine":32,"endColumn":38},{"ruleId":"230","severity":1,"message":"231","line":35,"column":25,"nodeType":"229","endLine":35,"endColumn":38},{"ruleId":"230","severity":1,"message":"231","line":38,"column":25,"nodeType":"229","endLine":38,"endColumn":38},{"ruleId":"232","severity":1,"message":"233","line":31,"column":28,"nodeType":"234","messageId":"235","endLine":31,"endColumn":30},{"ruleId":"232","severity":1,"message":"233","line":91,"column":51,"nodeType":"234","messageId":"235","endLine":91,"endColumn":53},{"ruleId":"236","severity":1,"message":"237","line":169,"column":46,"nodeType":"238","messageId":"239","endLine":169,"endColumn":47,"suggestions":"240"},{"ruleId":"236","severity":1,"message":"237","line":278,"column":46,"nodeType":"238","messageId":"239","endLine":278,"endColumn":47,"suggestions":"241"},{"ruleId":"230","severity":1,"message":"231","line":413,"column":19,"nodeType":"229","endLine":413,"endColumn":56},{"ruleId":"232","severity":1,"message":"233","line":11,"column":32,"nodeType":"234","messageId":"235","endLine":11,"endColumn":34},{"ruleId":"230","severity":1,"message":"242","line":29,"column":17,"nodeType":"229","endLine":29,"endColumn":56},{"ruleId":"230","severity":1,"message":"242","line":30,"column":17,"nodeType":"229","endLine":30,"endColumn":56},{"ruleId":"243","severity":1,"message":"244","line":2,"column":8,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"223","replacedBy":"247"},{"ruleId":"225","replacedBy":"248"},{"ruleId":"230","severity":1,"message":"231","line":41,"column":29,"nodeType":"229","endLine":41,"endColumn":41},{"ruleId":"230","severity":1,"message":"242","line":53,"column":33,"nodeType":"229","endLine":53,"endColumn":58},{"ruleId":"230","severity":1,"message":"231","line":68,"column":33,"nodeType":"229","endLine":68,"endColumn":46},{"ruleId":"230","severity":1,"message":"231","line":71,"column":33,"nodeType":"229","endLine":71,"endColumn":46},{"ruleId":"230","severity":1,"message":"231","line":471,"column":19,"nodeType":"229","endLine":471,"endColumn":56},{"ruleId":"243","severity":1,"message":"249","line":13,"column":13,"nodeType":"245","messageId":"246","endLine":13,"endColumn":21},{"ruleId":"243","severity":1,"message":"250","line":15,"column":13,"nodeType":"245","messageId":"246","endLine":15,"endColumn":22},{"ruleId":"230","severity":1,"message":"242","line":29,"column":17,"nodeType":"229","endLine":29,"endColumn":56},{"ruleId":"230","severity":1,"message":"242","line":30,"column":17,"nodeType":"229","endLine":30,"endColumn":56},{"ruleId":"230","severity":1,"message":"242","line":71,"column":69,"nodeType":"229","endLine":71,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":72,"column":67,"nodeType":"229","endLine":72,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":73,"column":65,"nodeType":"229","endLine":73,"endColumn":68},{"ruleId":"230","severity":1,"message":"242","line":74,"column":67,"nodeType":"229","endLine":74,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":75,"column":69,"nodeType":"229","endLine":75,"endColumn":72},{"ruleId":"243","severity":1,"message":"251","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"242","line":71,"column":88,"nodeType":"229","endLine":71,"endColumn":91},{"ruleId":"230","severity":1,"message":"242","line":72,"column":67,"nodeType":"229","endLine":72,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":73,"column":65,"nodeType":"229","endLine":73,"endColumn":68},{"ruleId":"230","severity":1,"message":"242","line":74,"column":67,"nodeType":"229","endLine":74,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":75,"column":69,"nodeType":"229","endLine":75,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":70,"column":69,"nodeType":"229","endLine":70,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":71,"column":86,"nodeType":"229","endLine":71,"endColumn":89},{"ruleId":"230","severity":1,"message":"242","line":72,"column":65,"nodeType":"229","endLine":72,"endColumn":68},{"ruleId":"230","severity":1,"message":"242","line":73,"column":67,"nodeType":"229","endLine":73,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":74,"column":69,"nodeType":"229","endLine":74,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":70,"column":69,"nodeType":"229","endLine":70,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":71,"column":67,"nodeType":"229","endLine":71,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":72,"column":65,"nodeType":"229","endLine":72,"endColumn":68},{"ruleId":"230","severity":1,"message":"242","line":73,"column":86,"nodeType":"229","endLine":73,"endColumn":89},{"ruleId":"230","severity":1,"message":"242","line":74,"column":69,"nodeType":"229","endLine":74,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":72,"column":69,"nodeType":"229","endLine":72,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":73,"column":67,"nodeType":"229","endLine":73,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":74,"column":84,"nodeType":"229","endLine":74,"endColumn":87},{"ruleId":"230","severity":1,"message":"242","line":75,"column":67,"nodeType":"229","endLine":75,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":76,"column":69,"nodeType":"229","endLine":76,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":70,"column":69,"nodeType":"229","endLine":70,"endColumn":72},{"ruleId":"230","severity":1,"message":"242","line":71,"column":67,"nodeType":"229","endLine":71,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":72,"column":65,"nodeType":"229","endLine":72,"endColumn":68},{"ruleId":"230","severity":1,"message":"242","line":73,"column":67,"nodeType":"229","endLine":73,"endColumn":70},{"ruleId":"230","severity":1,"message":"242","line":74,"column":88,"nodeType":"229","endLine":74,"endColumn":91},{"ruleId":"243","severity":1,"message":"251","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":23,"column":5,"nodeType":"254","messageId":"255","endLine":25,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":51,"column":13,"nodeType":"258","endLine":51,"endColumn":23},{"ruleId":"259","severity":1,"message":"260","line":279,"column":59,"nodeType":"234","messageId":"261","endLine":279,"endColumn":60},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\*.","Literal","unnecessaryEscape",["264","265"],["266","267"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar",["262"],["263"],"'location' is assigned a value but never used.","'popOption' is assigned a value but never used.","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"messageId":"268","fix":"269","desc":"270"},{"messageId":"271","fix":"272","desc":"273"},{"messageId":"268","fix":"274","desc":"270"},{"messageId":"271","fix":"275","desc":"273"},"removeEscape",{"range":"276","text":"277"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"278","text":"279"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"280","text":"277"},{"range":"281","text":"279"},[6102,6103],"",[6102,6102],"\\",[10461,10462],[10461,10461]]