[{"P:\\Leeting\\Git\\FrontEnd\\src\\index.js":"1","P:\\Leeting\\Git\\FrontEnd\\src\\App.js":"2","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Footer.js":"3","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Header.js":"4","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Home.js":"5","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Join.js":"6","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Login.js":"7","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Find.js":"8","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\NotFound.js":"9","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Leeting.js":"10","P:\\Leeting\\working\\FrontEnd\\src\\index.js":"11","P:\\Leeting\\working\\FrontEnd\\src\\App.js":"12","P:\\Leeting\\working\\FrontEnd\\src\\components\\Header.js":"13","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Find.js":"14","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Join.js":"15","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Home.js":"16","P:\\Leeting\\working\\FrontEnd\\src\\components\\Footer.js":"17","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Login.js":"18","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Leeting.js":"19","P:\\Leeting\\working\\FrontEnd\\src\\routes\\NotFound.js":"20","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\exercise.js":"21","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\Detail.js":"22","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\exercise.js":"23","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\music.js":"24","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\game.js":"25","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\lans.js":"26","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\diy.js":"27","P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\study.js":"28","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\game.js":"29","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\music.js":"30","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\lans.js":"31","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\diy.js":"32","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\study.js":"33"},{"size":233,"mtime":1610882764000,"results":"34","hashOfConfig":"35"},{"size":978,"mtime":1611021590941,"results":"36","hashOfConfig":"35"},{"size":989,"mtime":1610882764000,"results":"37","hashOfConfig":"35"},{"size":1465,"mtime":1611021658582,"results":"38","hashOfConfig":"35"},{"size":6226,"mtime":1611022863176,"results":"39","hashOfConfig":"35"},{"size":18738,"mtime":1610957862905,"results":"40","hashOfConfig":"35"},{"size":3679,"mtime":1611021547690,"results":"41","hashOfConfig":"35"},{"size":5089,"mtime":1610882764000,"results":"42","hashOfConfig":"35"},{"size":1133,"mtime":1610882764000,"results":"43","hashOfConfig":"35"},{"size":309,"mtime":1611023076460,"results":"44","hashOfConfig":"35"},{"size":233,"mtime":1610882764000,"results":"45","hashOfConfig":"46"},{"size":1902,"mtime":1611157513188,"results":"47","hashOfConfig":"46"},{"size":3171,"mtime":1611158860585,"results":"48","hashOfConfig":"46"},{"size":16421,"mtime":1611110965189,"results":"49","hashOfConfig":"46"},{"size":21004,"mtime":1611110330507,"results":"50","hashOfConfig":"46"},{"size":6303,"mtime":1611157449636,"results":"51","hashOfConfig":"46"},{"size":989,"mtime":1610882764000,"results":"52","hashOfConfig":"46"},{"size":3978,"mtime":1611034011383,"results":"53","hashOfConfig":"46"},{"size":1775,"mtime":1611069843855,"results":"54","hashOfConfig":"46"},{"size":1136,"mtime":1611129546542,"results":"55","hashOfConfig":"46"},{"size":1299,"mtime":1611157263888,"results":"56","hashOfConfig":"46"},{"size":2234,"mtime":1611163538426,"results":"57","hashOfConfig":"46"},{"size":4191,"mtime":1611159723282,"results":"58","hashOfConfig":"46"},{"size":4176,"mtime":1611159692669,"results":"59","hashOfConfig":"46"},{"size":4126,"mtime":1611159711588,"results":"60","hashOfConfig":"46"},{"size":4197,"mtime":1611159503478,"results":"61","hashOfConfig":"46"},{"size":4159,"mtime":1611159651979,"results":"62","hashOfConfig":"46"},{"size":4180,"mtime":1611159749401,"results":"63","hashOfConfig":"46"},{"size":1288,"mtime":1611157255673,"results":"64","hashOfConfig":"46"},{"size":1290,"mtime":1611157228168,"results":"65","hashOfConfig":"46"},{"size":1288,"mtime":1611157242569,"results":"66","hashOfConfig":"46"},{"size":1285,"mtime":1611157277546,"results":"67","hashOfConfig":"46"},{"size":1291,"mtime":1611157223101,"results":"68","hashOfConfig":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"ou3266",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1d1pgq1",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"P:\\Leeting\\Git\\FrontEnd\\src\\index.js",[],["148","149"],"P:\\Leeting\\Git\\FrontEnd\\src\\App.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\components\\Footer.js",["150","151","152"],"import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id=\"footer\">\n        <div className=\"footerdiv\">\n            <ul className=\"fnb\">\n                <li><a href=\"/\">이용약관</a></li>\n                <li><a href=\"/\">개인정보처리방침</a></li>\n            </ul>\n            <ul className=\"ftsns\">\n                <li className=\"insta\"><a href=\"/\" target=\"_blank\"></a></li>\n                <li className=\"youtube\"><a href=\"/\" target=\"_blank\"></a></li>\n                <li className=\"kakao\"><a href=\"/\" target=\"_blank\"></a></li>\n            </ul>\n            <div className=\"fttxt\">\n                고객센터  02-1234-5678  |  평일 상담시간  09:00 ~ 18:00<br/>\n                본 사이트의 콘텐츠는 저작권법의 보호를 받는 바 무단 전재, 복사, 배포 등을 금합니다.<br/>\n                Copyright © Leeting All Rights Reserved.\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Footer;","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Header.js",["153","154","155","156"],"import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div id=\"header\">\n        <div className=\"gtop\">\n            <div className=\"dvwrap\">\n            <a className=\"logo\" href=\"/\">\n                Leeting입니다\n            </a>\n            <div className=\"topsearch\">\n                <form name=\"searchForm\">\n                          <input type=\"text\" name=\"searchVal\" placeholder=\"검색어를 입력하세요\">\n                              </input>\n                    <a href=\"#\">검색</a>\n                </form>\n            </div>\n            <ul>\n                <li><a href=\"/join\">회원가입</a></li>\n                <li><a href=\"/Login\">로그인</a></li>\n            </ul>\n        </div>\n        </div>\n        <div className=\"headerWrap\">\n            <div className=\"gnb cB\" id=\"gnb\">\n                <ul className=\"topmenu\" id=\"head-menu\">\n                    <li className=\"lnb1\">\n                        <a href=\"/Leeting\">Leeting</a>\n                    </li>\n                    <li className=\"lnb2\">\n                        <a href=\"#\" >메뉴2</a>\n                    </li>\n                    <li className=\"lnb3\">\n                        <a href=\"#\" >메뉴3</a>\n                    </li>\n                    <li className=\"lnb4\">\n                        <a href=\"#\" >메뉴4</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Header;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Home.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Join.js",["157","158","159","160","161"],"import React from \"react\";\nimport \"./Join.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\nclass Join extends React.Component {\n  \n  constructor(props) {\n      super(props);\n    this.state = {\n      value: 'kakao.com',\n      checkId: false,\n      checkPw: false,\n      checkName: false,\n      checkNickname: false,\n      checkEmail: false,\n      checkMobile: false\n    };\n  }\n  state ={\n    id: \"\",\n    pw: \"\",\n    name: \"\",\n    nickname: \"\",\n    email: \"\",\n    domain: \"\",\n    mobile: \"\",\n  }\n  \n  handleChange = (event) => {\n    if (event.target.value != '직접입력') {\n      this.setState({\n        value: event.target.value,\n        domain: event.target.value,\n        checkEmail: true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(event.target.value);\n      document.getElementById('validateDomain').textContent = \"\";\n          document.getElementById('writedomain').value = event.target.value;\n          document.getElementById('writedomain').readOnly=true;\n      }\n    else {\n      this.setState({\n        value: event.target.value,\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('writedomain').readOnly = false;\n          document.getElementById('writedomain').value = \"\";\n          document.getElementById('writedomain').placeholder = \"입력하세요\";\n      }\n  }\n  idChange = (e) => {\n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      document.getElementById('validateId').textContent = \"아이디는 영어 소문자로 시작하는 6~20자 영어 소문자 또는 숫자이어야 합니다.\";\n      document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateId').textContent = \"\";\n      this.setState({\n          id: e.target.value,\n      });\n    }\n  };\n  \n  pwChange = (e) => {\n    var pwReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\n    \n    if (!pwReg.test(e.target.value)) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePw').textContent = \"비밀번호는 8자 이상의 문자, 숫자, 특수 문자 조합이어야 합니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validatePw').textContent = \"사용가능한 비밀번호 입니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color:blue');\n      this.setState({\n          pw: e.target.value,\n          checkPw:true\n      }); \n    }\n\n    \n    if (document.getElementById('inputCPw').value != e.target.value) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    else{\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n        // document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n\n    // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n    //   document.getElementById('joinbtn').disabled = false;\n    // }\n    // console.log(this.state.checkPw);\n  };\n\n  cpwChange = (e) => {\n    if (e.target.value === '') {\n      this.setState({\n        checkPw: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"\";\n    }\n    else if (document.getElementById('inputPw').value === e.target.value) {\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n    else {\n      this.setState({\n        checkPw: false\n      });\n      \n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    // console.log(this.state.checkPw);\n  };\n\n  nameChange = (e) => {\n    var nameReg = /^[가-힣]{2,4}$/g;\n    if (!nameReg.test(e.target.value)) {\n      this.setState({\n        checkName: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateName').textContent = \"이름은 2~4자 사이의 한국어 입니다.\";\n      document.getElementById('validateName').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateName').textContent = \"\";\n      this.setState({\n        name: e.target.value,\n        checkName:true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n    }\n  };\n\n  nicknameChange = (e) => {\n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      this.setState({\n        checkNickname: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateNickName').textContent = \"닉네임은 2~10자 사이의 한국어, 영어, 숫자로 이루어져 있습니다.\";\n    }\n    else {\n      document.getElementById('validateNickName').textContent = \"\";\n      this.setState({\n        nickname: e.target.value,\n      });\n      // console.log(e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkNickname);\n    }\n  };\n  emailChange = (e) => {\n    this.setState({\n        email: e.target.value,\n    });\n  };\n  domainChange = (e) => {\n    var domainReg = /^([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){2,3}$/g;\n    if (!domainReg.test(e.target.value)) {\n      this.setState({\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateDomain').textContent = \"정확한 도메인을 입력해주세요\";\n      document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log('test1 : ' + this.state.checkEmail);\n      this.setState({\n        checkEmail: true\n      });\n      // console.log('test2 : ' + e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log('test3 : ' + this.state.checkEmail);\n      document.getElementById('validateDomain').textContent = \"\";\n    }\n  };\n  mobileChange = (e) => {\n    var phoneReg = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n    if (!phoneReg.test(e.target.value)) {\n      this.setState({\n        checkMobile: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePhone').textContent = \"휴대폰 번호는 010-1234-5678 형식으로 입력해주세요.\";\n      document.getElementById('validatePhone').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log(this.state.checkMobile);\n      this.setState({\n        mobile: e.target.value,\n        checkMobile:true\n      });\n      // console.log('test1 : ' + e.target.value);\n      document.getElementById('validatePhone').textContent = \"\";\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkMobile);\n    }\n    \n  };\n  sameClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/same', {\n        id: this.state.id\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkId: true\n          });\n          document.getElementById('validateId').textContent = \"사용가능한 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkId: false\n          });\n          // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('validateId').textContent = \"이미 존재하는 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n\n  sameNickClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/samenick', {\n        nickname: this.state.nickname\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkNickname: true\n          });\n          document.getElementById('validateNickName').textContent = \"사용가능한 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkNickname: false\n          });\n          document.getElementById('validateNickName').textContent = \"이미 존재하는 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      axios.post('http://127.0.0.1:8080/myapp/member/join', {\n        id: this.state.id,\n        pw: this.state.pw,\n        nickname: this.state.nickname,\n        name: this.state.name,\n        email: this.state.email + \"@\" + this.state.domain,\n        mobile : this.state.mobile\n      }).then(res => {\n        //console.log(res);\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          alert(\"환영합니다~ 로그인 페이지로 이동합니다.\");\n          console.log(\"회원가입 완료\");\n          this.props.history.push('/login');\n        }\n        else {\n          alert(\"회원가입에 실패하였습니다. 메인 페이지로 이동합니다.\");\n          console.log(\"회원가입 실패\");\n          this.props.history.push('/');\n        }\n      })\n    }\n    else {\n      alert(\"입력 정보를 확인해주세요!\");\n      console.log(\"미입력여부\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"joinContainer\">\n        <h1 className=\"tit\">회 원 가 입</h1>\n        <hr />\n        <div className=\"formcenter\">\n          <div>\n            {/* <form action=\"submit\" className=\"signupcustom\" > */}\n              \n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelId\" className=\"font-weight-bold\" htmlFor=\"inputId\">아이디</label>\n                <input type=\"text\" name=\"uid\" id=\"inputId\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\n                <button id=\"checkId\" className=\"btn\" onClick={this.sameClick}>중복 확인</button>\n                </div>\n                <label id=\"validateId\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label id=\"labelPw\" className=\"font-weight-bold\" htmlFor=\"inputPw\">비밀번호</label>\n                  <input type=\"password\" id=\"inputPw\" className=\"form-control margin-bottom-20\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\n                </div>\n                <label id=\"validatePw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelCPw\" htmlFor=\"inputCPw\">비밀번호 확인</label>\n                  <input type=\"password\" id=\"inputCPw\" className=\"form-control margin-bottom-20\" placeholder=\"확인용 비밀번호를 입력해주세요\" onChange={this.cpwChange}></input>\n                </div>\n                <label id=\"validateCPw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelName\" htmlFor=\"inputName\">성명</label>\n                  <input type=\"text\" id=\"inputName\" className=\"form-control margin-bottom-20\" placeholder=\"한글 이름을 입력해주세요\" onChange ={this.nameChange}></input>\n                </div>\n                <label id=\"validateName\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label className=\"font-weight-bold\" id=\"labelNickName\" htmlFor=\"inputNickName\">닉네임</label>\n                <input type=\"text\" id=\"inputNickName\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"닉네임을 입력해주세요\" onChange={this.nicknameChange}></input>\n                <button id=\"checkNickName\" className=\"btn\" onClick={this.sameNickClick}>중복 확인</button>\n                </div>\n                <label id=\"validateNickName\"></label>\n              </div>\n            <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"email\">이메일</label>\n                  <input type=\"text\" id=\"email\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.emailChange}></input>\n                  &nbsp;<label id=\"at\">@</label>&nbsp;\n                  <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" placeholder=\"kakao.com\" onChange={this.domainChange} readOnly></input>&nbsp;\n                  <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                          <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                          <option value=\"naver.com\">naver.com</option>\n                          <option value=\"daum.net\">daum.net</option>\n                          <option value=\"직접입력\">직접입력</option>\n                  </select>\n                </div>\n                <label id=\"validateDomain\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelPhone\" htmlFor=\"inputPhone\">휴대전화 번호</label>\n                  <input type=\"tel\" id=\"inputPhone\" className=\"form-control margin-bottom-20\" placeholder=\"휴대폰 번호를 입력해주세요\" onChange={this.mobileChange}></input>\n                </div>\n                <label id=\"validatePhone\"></label>\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <div className=\"col-12 text-center\">\n                  <input type=\"checkbox\" id=\"checkjoin\"></input>&nbsp;\n                    <label htmlFor=\"checkjoin\"><span></span> Leeting의 이용약관, 개인정보취급방침 및 개인정보3자제공에 동의합니다.</label>\n                </div>\n              </div>\n              <br />\n              <div className=\"row form-group\">\n                <div className=\"col-6 text-right\">\n                  <a href=\"\" className=\"btn btn-light\">돌아가기</a>\n                </div>\n                <div className=\"col-6\">\n                  <button type=\"submit\" id=\"joinbtn\" className=\"btn btn-primary\" onClick={this.handleClick}>가입하기</button>\n                </div>\n              </div>\n              \n            {/* </form> */}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Join;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Login.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Find.js",["162"],"import React from \"react\";\nimport \"./Find.css\";\n\nclass Find extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '선택하세요' };\n    }\n    handleChange = (event) => {\n        this.setState({ value: event.target.value });\n        if (event.target.value != '직접입력') {\n            document.getElementById('writedomain').value = event.target.value;\n            document.getElementById('writedomain').readOnly=true;\n        }\n        else {\n            document.getElementById('writedomain').readOnly = false;\n            document.getElementById('writedomain').value = \"\";\n            document.getElementById('writedomain').placeholder = \"입력하세요\";\n        }\n    }\n    render() {\n        return (\n            <div className=\"findcontainer\">\n                <div className=\"titles\">\n                    <h1 className=\"tit\">아이디 / 비밀번호 찾기</h1>\n                    <p className=\"subtit\">아이디와 비밀번호는 가입시 입력하신 이메일을 통해 찾을 수 있습니다.</p>\n                </div>\n                <hr />\n                <div className=\"formcenter\">\n                    <input id=\"tab1\" type=\"radio\" name=\"tabs\" defaultChecked></input>\n                    <label className=\"forradio\" htmlFor=\"tab1\">아이디 찾기</label>\n                    <input id=\"tab2\" type=\"radio\" name=\"tabs\"></input>\n                    <label className=\"forradio\" htmlFor=\"tab2\">비밀번호 찾기</label>\n\n                    <form id=\"findids\">\n                        <label className=\"forname\" htmlFor=\"name\">이름</label>\n                        <input type=\"text\" id=\"name\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\"></input>\n                        <label id=\"labelemail\" className=\"foremail\" htmlFor=\"email\">이메일</label>\n                        <input type=\"text\" id=\"email\" name=\"inputemail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\"></input>\n                        &nbsp;<label id=\"at\">@</label>&nbsp;\n                        <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-3 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" readOnly></input>&nbsp;\n                        <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                                <option value=\"naver.com\">naver.com</option>\n                                <option value=\"daum.net\">daum.net</option>\n                                <option value=\"직접입력\">직접입력</option>\n                        </select>\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button  className=\"btn find\">아이디 찾기</button>\n                        </div>\n                    </form>\n                    <form id=\"findpws\">\n                        <label className=\"forname\" htmlFor=\"name\">이름</label>\n                        <input type=\"text\" id=\"name\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\"></input>\n                        <label className=\"forid\" htmlFor=\"id\">아이디</label>\n                        <input type=\"text\" id=\"id\" name=\"inputid\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"아이디를 입력해주세요\"></input>\n                        <label id=\"labelemail\" className=\"foremail\" htmlFor=\"email\">이메일</label>\n                        <input type=\"text\" id=\"email\" name=\"inputemail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\"></input>\n                        &nbsp;<label id=\"at\">@</label>&nbsp;\n                        <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-3 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" readOnly></input>&nbsp;\n                        <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                                <option value=\"naver.com\">naver.com</option>\n                                <option value=\"daum.net\">daum.net</option>\n                                <option value=\"직접입력\">직접입력</option>\n                        </select>\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button  className=\"btn find\">비밀번호 찾기</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Find;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\NotFound.js",["163","164"],"import React, { useEffect } from 'react';\nimport \"./NotFound.css\"\n\nfunction NotFound({ history }) {\n    const goBack = () => {\n        history.goBack();\n    };\n    const goHome = () => {\n        history.push('/');\n      };\n    \n      useEffect(() => {\n        console.log(history);\n        const unblock = history.block('정말 떠나실건가요?');\n        return () => {\n          unblock();\n        };\n      }, [history]);\n    \n    return (\n        <div className='notFoundCon'>\n            <img src=\"img/404error.png\" alt=\"404에러\"></img>\n            <p className=\"tit\">페이지를 <span>찾을 수 없습니다.</span><br />\n            (404 Not Found)</p>\n            <p className=\"subtit\">페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.<br />\n            입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\n\n            <div className=\"btndiv\">\n                <a className=\"goBack\" onClick={goBack}>이전 화면</a>\n                <a className=\"goHome\" onClick={goHome}>홈으로</a>\n            </div>\n        </div>\n    );\n}\n\nexport default NotFound;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Leeting.js",["165"],"import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"./Slider.css\";\r\nimport \"./Home.css\";\r\n\r\nclass Leeting extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"main_content\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Leeting;","P:\\Leeting\\working\\FrontEnd\\src\\index.js",[],["166","167"],"P:\\Leeting\\working\\FrontEnd\\src\\App.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\Header.js",["168","169","170","171"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\Find.js",["172","173"],"import React from \"react\";\nimport \"./Find.css\";\nimport axios from \"axios\";\n\nclass Find extends React.Component {\n    constructor(props) {\n        super(props);\n      this.state = {\n        value: '선택하세요',\n        checkIdEmail: false,\n      };\n    }\n    state ={\n        id: \"\",\n        idname: \"\",\n        idemail: \"\",\n        iddomain: \"\",\n        idtoken:\"\",\n        idauth: \"\",\n        pwid: \"\",\n        pwname: \"\",\n        pwemail: \"\",\n        pwdomain: \"\",\n        pwtoken: \"\",\n        pwauth:\"\"\n    }\n\n    idemailChange = (e) => {\n        this.setState({\n            idemail:e.target.value\n        })\n    }\n    iddomainChange = (e) => {\n        this.setState({\n            iddomain:e.target.value\n        })\n    }\n\n    pwemailChange = (e) => {\n        this.setState({\n            pwemail:e.target.value\n        })\n    }\n    pwdomainChange = (e) => {\n        this.setState({\n            pwdomain:e.target.value\n        })\n    }\n\n    idnamechange = (e) => {\n        this.setState({\n            idname: e.target.value\n        });\n    }\n    pwnamechange = (e) => {\n        this.setState({\n            pwname: e.target.value\n        });\n    }\n\n    pwidChange = (e) => {\n        this.setState({\n            pwid : e.target.value\n        })\n    }\n\n    /*인증번호 전송*/\n    idauthCheck = (e) => {\n        e.preventDefault();\n        console.log(this.state.idemail + \"@\" + this.state.iddomain);\n        axios.post('http://127.0.0.1:8080/myapp/member/email', {\n            email: this.state.idemail + \"@\" + this.state.iddomain,\n        }).then(res => {\n            console.log(res);\n            console.log(res.data);\n            this.setState({\n                idtoken: res.data\n            })\n            document.getElementById('idauth').disabled = false;\n            // document.getElementById('idsendtoken').setAttribute('style', 'display:none');\n            document.getElementById('idchecktoken').setAttribute('style', 'display:inline-block');\n        })\n    };\n    /*인증번호 전송*/\n    pwauthCheck = (e) => {\n        e.preventDefault();\n        console.log(this.state.pwemail + \"@\" + this.state.pwdomain);\n        axios.post('http://127.0.0.1:8080/myapp/member/email', {\n            email: this.state.pwemail + \"@\" + this.state.pwdomain,\n        }).then(res => {\n            console.log(res);\n            console.log(res.data);\n            this.setState({\n                pwtoken: res.data\n            })\n            document.getElementById('pwauth').disabled = false;\n            // document.getElementById('idsendtoken').setAttribute('style', 'display:none');\n            document.getElementById('pwchecktoken').setAttribute('style', 'display:inline-block');\n        })\n    };\n\n    idauthChange = (e) => {\n        this.setState({\n            idauth: e.target.value\n        });\n    }\n    pwauthChange = (e) => {\n        this.setState({\n            pwauth: e.target.value\n        });\n    }\n    idemailtokenCheck = (e) => {\n        e.preventDefault();\n\n        console.log(this.state.idauth);\n        console.log(this.state.idtoken);\n\n        axios.post('http://127.0.0.1:8080/myapp/member/auth', {\n        token: this.state.idtoken,\n        auth: this.state.idauth,      \n        }).then(res => {\n            console.log(res);\n            console.log(res.data);\n            if (res.data === \"SUCCESS\") {\n            this.setState({\n                checkIdEmail: true\n            });\n            document.getElementById('idauth').disabled = true;\n            document.getElementById('idsendtoken').setAttribute('style', 'display:none');\n            document.getElementById('idchecktoken').setAttribute('style', 'display:none');\n            \n            document.getElementById('idvalidateDomain').textContent = \"인증번호가 확인되었습니다.\";\n            document.getElementById('idvalidateDomain').setAttribute('style', 'color: blue');\n            } else {\n            document.getElementById('idsendtoken').setAttribute('style', 'display:inline-block');\n            document.getElementById('idvalidateDomain').textContent = \"인증번호를 재확인해주세요\";\n            document.getElementById('idvalidateDomain').setAttribute('style', 'color: #ff3535');\n            }\n        })\n    };\n    pwemailtokenCheck = (e) => {\n        e.preventDefault();\n\n        console.log(this.state.pwauth);\n        console.log(this.state.pwtoken);\n\n        axios.post('http://127.0.0.1:8080/myapp/member/auth', {\n        token: this.state.pwtoken,\n        auth: this.state.pwauth,      \n        }).then(res => {\n            console.log(res);\n            console.log(res.data);\n            if (res.data === \"SUCCESS\") {\n            this.setState({\n                checkPwEmail: true\n            });\n            document.getElementById('pwauth').disabled = true;\n            document.getElementById('pwsendtoken').setAttribute('style', 'display:none');\n            document.getElementById('pwchecktoken').setAttribute('style', 'display:none');\n            \n            document.getElementById('pwvalidateDomain').textContent = \"인증번호가 확인되었습니다.\";\n            document.getElementById('pwvalidateDomain').setAttribute('style', 'color: blue');\n            } else {\n            document.getElementById('pwsendtoken').setAttribute('style', 'display:inline-block');\n            document.getElementById('pwvalidateDomain').textContent = \"인증번호를 재확인해주세요\";\n            document.getElementById('pwvalidateDomain').setAttribute('style', 'color: #ff3535');\n            }\n        })\n    };\n\n\n    handleChange = (event) => {\n        if (event.target.value != '직접입력') {\n          this.setState({\n            value: event.target.value,\n            iddomain: event.target.value\n          });\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n          // console.log(event.target.value);\n          document.getElementById('idvalidateDomain').textContent = \"\";\n              document.getElementById('idwritedomain').value = event.target.value;\n              document.getElementById('idwritedomain').readOnly=true;\n          }\n        else {\n          this.setState({\n            value: event.target.value,\n          });\n          // document.getElementById('joinbtn').disabled = true;\n              document.getElementById('idwritedomain').readOnly = false;\n              document.getElementById('idwritedomain').value = \"\";\n              document.getElementById('idwritedomain').placeholder = \"입력하세요\";\n          }\n    }\n\n    pwhandleChange = (event) => {\n        if (event.target.value != '직접입력') {\n          this.setState({\n            value: event.target.value,\n            pwdomain: event.target.value\n          });\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n          // console.log(event.target.value);\n          document.getElementById('pwvalidateDomain').textContent = \"\";\n              document.getElementById('pwwritedomain').value = event.target.value;\n              document.getElementById('pwwritedomain').readOnly=true;\n          }\n        else {\n          this.setState({\n            value: event.target.value,\n          });\n          // document.getElementById('joinbtn').disabled = true;\n              document.getElementById('pwwritedomain').readOnly = false;\n              document.getElementById('pwwritedomain').value = \"\";\n              document.getElementById('pwwritedomain').placeholder = \"입력하세요\";\n          }\n    }\n\n    findid = (e) => {\n        e.preventDefault();\n\n        if (this.state.checkIdEmail === true) {\n            axios.get('http://127.0.0.1:8080/myapp/member/findid', {\n                params: {\n                    name: this.state.idname,\n                    email: this.state.idemail + \"@\" + this.state.iddomain,\n                }\n            }).then(res => {\n                console.log(res);\n                console.log(res.data);\n                if (res.data === \"FAIL\") {\n                    alert(\"찾으시는 정보가 없습니다.\");\n                    window.location.replace(\"/find\");\n                }\n                else {\n                    alert(\"찾으시는 아이디는 : \"+ res.data+\" 입니다.\");\n                }\n            })\n        }\n        else {\n            alert(\"이메일 인증을 완료해주세요!\");\n        }\n    }\n\n    findPw = (e) => {\n        e.preventDefault();\n\n        if (this.state.checkPwEmail === true) {\n            axios.get('http://127.0.0.1:8080/myapp/member/findpw', {\n                params: {\n                    name: this.state.pwname,\n                    id: this.state.pwid,\n                    email: this.state.pwemail + \"@\" + this.state.pwdomain,\n                }\n            }).then(res => {\n                console.log(res);\n                console.log(res.data);\n                if (res.data === \"FAIL\") {\n                    alert(\"찾으시는 정보가 없습니다.\");\n                    window.location.replace(\"/find\");\n                }\n                else {\n                    alert(\"찾으시는 비밀번호는 : \"+ res.data+\" 입니다.\");\n                }\n            })\n        }\n        else {\n            alert(\"이메일 인증을 완료해주세요!\");\n        }\n    }\n    \n    render() {\n        return (\n            <div className=\"findcontainer\">\n                <div className=\"titles\">\n                    <h1 className=\"tit\">아이디 / 비밀번호 찾기</h1>\n                    <p className=\"subtit\">아이디와 비밀번호는 가입시 입력하신 이메일을 통해 찾을 수 있습니다.</p>\n                </div>\n                <hr />\n                <div className=\"formcenter\">\n                    <input id=\"tab1\" type=\"radio\" name=\"tabs\" defaultChecked></input>\n                    <label className=\"forradio\" htmlFor=\"tab1\">아이디 찾기</label>\n                    <input id=\"tab2\" type=\"radio\" name=\"tabs\"></input>\n                    <label className=\"forradio\" htmlFor=\"tab2\">비밀번호 찾기</label>\n\n                    <form id=\"findids\">\n                        <div className=\"col-12\">\n                            <label className=\"font-weight-bold forname\" htmlFor=\"idname\">이름</label>\n                            <input type=\"text\" id=\"idname\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\" onChange={this.idnamechange}></input>\n                        </div>\n                        <div className=\"col-12\">\n                            <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"idemail\">이메일</label>\n                            <input type=\"text\" id=\"idemail\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.idemailChange}></input>\n                            &nbsp;<label id=\"at\">@</label>&nbsp;\n                            <input id=\"idwritedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" onChange={this.iddomainChange} placeholder=\"선택하세요\" readOnly></input>&nbsp;\n                            <select id=\"iddomain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                                    <option value=\"선택하세요\" defaultValue>선택하세요</option>\n                                    <option value=\"kakao.com\" >kakao.com</option>\n                                    <option value=\"naver.com\">naver.com</option>\n                                    <option value=\"daum.net\">daum.net</option>\n                                    <option value=\"직접입력\">직접입력</option>\n                            </select>\n                        </div>\n                        <div className=\"col-12\">\n                            <input type=\"text\" id=\"idauth\" className=\"form-control col-4 margin-bottom-20\" onChange={this.idauthChange} disabled></input>\n                            <button id=\"idsendtoken\" className=\"btn\" onClick={this.idauthCheck}>인증번호 전송</button>\n                            <button id=\"idchecktoken\" className=\"btn\" onClick={this.idemailtokenCheck}>인증번호 확인</button>\n                        </div>\n                        <div className=\"col-12\">\n                            <label id=\"idvalidateDomain\"></label>\n                        </div>\n\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button className=\"btn find\" onClick={this.findid}>아이디 찾기</button>\n                        </div>\n                    </form>\n\n\n                    <form id=\"findpws\">\n                        <div className=\"col-12\">\n                            <label className=\"font-weight-bold forname\" htmlFor=\"pwname\">이름</label>\n                            <input type=\"text\" id=\"pwname\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\" onChange={this.pwnamechange}></input>\n                        </div>\n                        \n                        <div className=\"col-12\">\n                            <label className=\"font-weight-bold forid\" htmlFor=\"pwid\">아이디</label>\n                            <input type=\"text\" id=\"pwid\" name=\"inputid\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"아이디를 입력해주세요\" onChange={this.pwidChange}></input>\n                        </div>\n\n                        <div className=\"col-12\">\n                            <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"pwemail\">이메일</label>\n                            <input type=\"text\" id=\"pwemail\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.pwemailChange}></input>\n                            &nbsp;<label id=\"at\">@</label>&nbsp;\n                            <input id=\"pwwritedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" readOnly onChange={this.pwdomainChange}></input>&nbsp;\n                            <select id=\"pwdomain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.pwhandleChange}>\n                                    <option value=\"선택하세요\" defaultValue>선택하세요</option>\n                                    <option value=\"kakao.com\" >kakao.com</option>\n                                    <option value=\"naver.com\">naver.com</option>\n                                    <option value=\"daum.net\">daum.net</option>\n                                    <option value=\"직접입력\">직접입력</option>\n                            </select>\n                        </div>\n                        <div className=\"col-12\">\n                            <input type=\"text\" id=\"pwauth\" className=\"form-control col-4 margin-bottom-20\" onChange={this.pwauthChange} disabled></input>\n                            <button id=\"pwsendtoken\" className=\"btn\" onClick={this.pwauthCheck}>인증번호 전송</button>\n                            <button id=\"pwchecktoken\" className=\"btn\" onClick={this.pwemailtokenCheck}>인증번호 확인</button>\n                        </div>\n                        <div className=\"col-12\">\n                        <label id=\"pwvalidateDomain\"></label>\n                        </div>\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button  className=\"btn find\" onClick={this.findPw}>비밀번호 찾기</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Find;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Join.js",["174","175","176","177","178"],"import React from \"react\";\nimport \"./Join.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\nclass Join extends React.Component {\n  constructor(props) {\n      super(props);\n    this.state = {\n      value: '선택하세요',\n      checkId: false,\n      checkPw: false,\n      checkName: false,\n      checkNickname: false,\n      checkEmail: false,\n      checkMobile: false\n    };\n  }\n  state ={\n    id: \"\",\n    pw: \"\",\n    name: \"\",\n    nickname: \"\",\n    email: \"\",\n    domain: \"\",\n    mobile: \"\",\n    token:\"\",\n    auth:\"\",\n  }\n  \n  handleChange = (event) => {\n    if (event.target.value != '직접입력') {\n      this.setState({\n        value: event.target.value,\n        domain: event.target.value,\n        checkEmail: true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(event.target.value);\n      document.getElementById('validateDomain').textContent = \"\";\n          document.getElementById('writedomain').value = event.target.value;\n          document.getElementById('writedomain').readOnly=true;\n      }\n    else {\n      this.setState({\n        value: event.target.value,\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('writedomain').readOnly = false;\n          document.getElementById('writedomain').value = \"\";\n          document.getElementById('writedomain').placeholder = \"입력하세요\";\n      }\n  }\n  idChange = (e) => {\n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      document.getElementById('validateId').textContent = \"아이디는 영어 소문자로 시작하는 6~20자 영어 소문자 또는 숫자이어야 합니다.\";\n      document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateId').textContent = \"\";\n      this.setState({\n          id: e.target.value,\n      });\n    }\n  };\n  \n  pwChange = (e) => {\n    var pwReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\n    \n    if (!pwReg.test(e.target.value)) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePw').textContent = \"비밀번호는 8자 이상의 문자, 숫자, 특수 문자 조합이어야 합니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validatePw').textContent = \"사용가능한 비밀번호 입니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color:blue');\n      this.setState({\n          pw: e.target.value,\n          checkPw:true\n      }); \n    }\n\n    \n    if (document.getElementById('inputCPw').value != e.target.value) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    else{\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n        // document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n\n    // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n    //   document.getElementById('joinbtn').disabled = false;\n    // }\n    // console.log(this.state.checkPw);\n  };\n\n  cpwChange = (e) => {\n    if (e.target.value === '') {\n      this.setState({\n        checkPw: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"\";\n    }\n    else if (document.getElementById('inputPw').value === e.target.value) {\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n    else {\n      this.setState({\n        checkPw: false\n      });\n      \n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    // console.log(this.state.checkPw);\n  };\n\n  nameChange = (e) => {\n    var nameReg = /^[가-힣]{2,4}$/g;\n    if (!nameReg.test(e.target.value)) {\n      this.setState({\n        checkName: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateName').textContent = \"이름은 2~4자 사이의 한국어 입니다.\";\n      document.getElementById('validateName').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateName').textContent = \"\";\n      this.setState({\n        name: e.target.value,\n        checkName:true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n    }\n  };\n\n  nicknameChange = (e) => {\n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      this.setState({\n        checkNickname: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateNickName').textContent = \"닉네임은 2~10자 사이의 한국어, 영어, 숫자로 이루어져 있습니다.\";\n    }\n    else {\n      document.getElementById('validateNickName').textContent = \"\";\n      this.setState({\n        nickname: e.target.value,\n      });\n      // console.log(e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkNickname);\n    }\n  };\n  emailChange = (e) => {\n    this.setState({\n        email: e.target.value,\n    });\n  };\n  domainChange = (e) => {\n    var domainReg = /^([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){2,3}$/g;\n    if (!domainReg.test(e.target.value)) {\n      this.setState({\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      // document.getElementById('validateDomain').textContent = \"정확한 도메인을 입력해주세요\";\n      // document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateDomain').textContent = \"\";\n    }\n  };\n  mobileChange = (e) => {\n    var phoneReg = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n    if (!phoneReg.test(e.target.value)) {\n      this.setState({\n        checkMobile: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePhone').textContent = \"휴대폰 번호는 010-1234-5678 형식으로 입력해주세요.\";\n      document.getElementById('validatePhone').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log(this.state.checkMobile);\n      this.setState({\n        mobile: e.target.value,\n        checkMobile:true\n      });\n      // console.log('test1 : ' + e.target.value);\n      document.getElementById('validatePhone').textContent = \"\";\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkMobile);\n    }\n    \n  };\n  sameClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/same', {\n        id: this.state.id\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkId: true\n          });\n          document.getElementById('validateId').textContent = \"사용가능한 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkId: false\n          });\n          // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('validateId').textContent = \"이미 존재하는 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n\n  sameNickClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/samenick', {\n        nickname: this.state.nickname\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkNickname: true\n          });\n          document.getElementById('validateNickName').textContent = \"사용가능한 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkNickname: false\n          });\n          document.getElementById('validateNickName').textContent = \"이미 존재하는 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n\n  /*인증번호 전송*/\n  authCheck = (e) => {\n    e.preventDefault();\n    console.log(this.state.email + \"@\" + this.state.domain);\n    axios.post('http://127.0.0.1:8080/myapp/member/email', {\n      samecheck:\"\",\n        email: this.state.email + \"@\" + this.state.domain,\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        this.setState({\n          token: res.data\n        })\n        if (res.data === \"FAIL\") {\n          document.getElementById('validateDomain').textContent = \"이미 가입된 이메일입니다.\";\n          document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n        } else {\n          document.getElementById('auth').disabled = false;\n          // document.getElementById('sendtoken').setAttribute('style', 'display:none');\n          document.getElementById('checktoken').setAttribute('style', 'display:inline-block'); \n        }\n      })\n  };\n\n  authChange = (e) => {\n    this.setState({\n      auth: e.target.value\n    });\n  }\n  emailtokenCheck = (e) => {\n    e.preventDefault();\n\n    console.log(this.state.auth);\n    console.log(this.state.token);\n\n    axios.post('http://127.0.0.1:8080/myapp/member/auth', {\n      token: this.state.token,\n      auth: this.state.auth,      \n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        if (res.data === \"SUCCESS\") {\n          this.setState({\n            checkEmail: true\n          });\n          document.getElementById('auth').disabled = true;\n          document.getElementById('sendtoken').setAttribute('style', 'display:none');\n          document.getElementById('checktoken').setAttribute('style', 'display:none');\n        \n          document.getElementById('validateDomain').textContent = \"인증번호가 확인되었습니다.\";\n          document.getElementById('validateDomain').setAttribute('style', 'color: blue');\n        } else {\n          document.getElementById('sendtoken').setAttribute('style', 'display:inline-block');\n          document.getElementById('validateDomain').textContent = \"인증번호를 재확인해주세요\";\n          document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n        }\n      })\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      axios.post('http://127.0.0.1:8080/myapp/member/join', {\n        id: this.state.id,\n        pw: this.state.pw,\n        nickname: this.state.nickname,\n        name: this.state.name,\n        email: this.state.email + \"@\" + this.state.domain,\n        mobile : this.state.mobile\n      }).then(res => {\n        //console.log(res);\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          alert(\"환영합니다~ 로그인 페이지로 이동합니다.\");\n          console.log(\"회원가입 완료\");\n          this.props.history.push('/login');\n        }\n        else {\n          alert(\"회원가입에 실패하였습니다. 메인 페이지로 이동합니다.\");\n          console.log(\"회원가입 실패\");\n          this.props.history.push('/');\n        }\n      })\n    }\n    else {\n      alert(\"입력 정보를 확인해주세요!\");\n      console.log(\"미입력여부\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"joinContainer\">\n        <h1 className=\"tit\">회 원 가 입</h1>\n        <hr />\n        <div className=\"formcenter\">\n          <div>\n            {/* <form action=\"submit\" className=\"signupcustom\" > */}\n              \n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelId\" className=\"font-weight-bold\" htmlFor=\"inputId\">아이디</label>\n                <input type=\"text\" name=\"uid\" id=\"inputId\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\n                <button id=\"checkId\" className=\"btn\" onClick={this.sameClick}>중복 확인</button>\n                </div>\n                <label id=\"validateId\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label id=\"labelPw\" className=\"font-weight-bold\" htmlFor=\"inputPw\">비밀번호</label>\n                  <input type=\"password\" id=\"inputPw\" className=\"form-control margin-bottom-20\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\n                </div>\n                <label id=\"validatePw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelCPw\" htmlFor=\"inputCPw\">비밀번호 확인</label>\n                  <input type=\"password\" id=\"inputCPw\" className=\"form-control margin-bottom-20\" placeholder=\"확인용 비밀번호를 입력해주세요\" onChange={this.cpwChange}></input>\n                </div>\n                <label id=\"validateCPw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelName\" htmlFor=\"inputName\">성명</label>\n                  <input type=\"text\" id=\"inputName\" className=\"form-control margin-bottom-20\" placeholder=\"한글 이름을 입력해주세요\" onChange ={this.nameChange}></input>\n                </div>\n                <label id=\"validateName\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label className=\"font-weight-bold\" id=\"labelNickName\" htmlFor=\"inputNickName\">닉네임</label>\n                <input type=\"text\" id=\"inputNickName\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"닉네임을 입력해주세요\" onChange={this.nicknameChange}></input>\n                <button id=\"checkNickName\" className=\"btn\" onClick={this.sameNickClick}>중복 확인</button>\n                </div>\n                <label id=\"validateNickName\"></label>\n              </div>\n            <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"email\">이메일</label>\n                  <input type=\"text\" id=\"email\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.emailChange}></input>\n                  &nbsp;<label id=\"at\">@</label>&nbsp;\n                  <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" onChange={this.domainChange} readOnly></input>&nbsp;\n                  <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                          <option value=\"선택하세요\" defaultValue>선택하세요</option>\n                          <option value=\"kakao.com\" >kakao.com</option>\n                          <option value=\"naver.com\">naver.com</option>\n                          <option value=\"daum.net\">daum.net</option>\n                          <option value=\"직접입력\">직접입력</option>\n                  </select>\n              </div>\n              <div className=\"col-12\">\n                <input type=\"text\" id=\"auth\" className=\"form-control col-4 margin-bottom-20\" onChange={this.authChange} disabled></input>\n                <button id=\"sendtoken\" className=\"btn\" onClick={this.authCheck}>인증번호 전송</button>\n                <button id=\"checktoken\" className=\"btn\" onClick={this.emailtokenCheck}>인증번호 확인</button>\n              </div>\n                <label id=\"validateDomain\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelPhone\" htmlFor=\"inputPhone\">휴대전화 번호</label>\n                  <input type=\"tel\" id=\"inputPhone\" className=\"form-control margin-bottom-20\" placeholder=\"휴대폰 번호를 입력해주세요\" onChange={this.mobileChange}></input>\n                </div>\n                <label id=\"validatePhone\"></label>\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <div className=\"col-12 text-center\">\n                  <input type=\"checkbox\" id=\"checkjoin\"></input>&nbsp;\n                    <label htmlFor=\"checkjoin\"><span></span> Leeting의 이용약관, 개인정보취급방침 및 개인정보3자제공에 동의합니다.</label>\n                </div>\n              </div>\n              <br />\n              <div className=\"row form-group\">\n                <div className=\"col-6 text-right\">\n                  <a href=\"\" className=\"btn btn-light\">돌아가기</a>\n                </div>\n                <div className=\"col-6\">\n                  <button type=\"submit\" id=\"joinbtn\" className=\"btn btn-primary\" onClick={this.handleClick}>가입하기</button>\n                </div>\n              </div>\n              \n            {/* </form> */}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Join;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Home.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\Footer.js",["179","180","181"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\Login.js",["182"],"import React from \"react\";\nimport axios from 'axios';\nimport \"./Login.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Login extends React.Component {\n    state ={\n        id: \"\",\n        pw: \"\",\n    }\n    handleClick = (e) => {\n        e.preventDefault();\n        \n        console.log(this.state);\n        axios.post('http://127.0.0.1:8080/myapp/member/login', {\n            id: this.state.id,\n            pw: this.state.pw\n        }).then(res => {\n            // console.log(res);\n            console.log(res.data.message);\n            if (res.data.message == \"SUCCESS\") {\n                sessionStorage.setItem(\"token\", res.data.token);\n                sessionStorage.setItem(\"nickname\", res.data.nickname);\n                window.location.replace(\"/\");\n            } else {\n                alert(\"아이디와 비밀번호를 확인해주세요.\");\n            }\n        })\n    };\n    idChange = (e) => {\n        this.setState({\n            id: e.target.value,\n        });\n    };\n    pwChange = (e) => {\n        this.setState({\n            pw: e.target.value,\n        });\n    };\n    render() {\n\n        return (\n            <div className=\"logincontainer\">\n                <h1 className=\"tit\">로 그 인</h1>\n                <hr />\n                <div className=\"formcenter\">\n                    <form action=\"get\" className=\"loginform\">\n                        <div className=\"id\">\n                            <p>아이디 </p>\n                            <input type=\"text\" className=\"form-control col-9 margin-bottom-20 logininput\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\n                        </div>\n                        <div className=\"password\">\n                            <p>비밀번호 </p>\n                            <input type=\"password\" className=\"form-control col-9 margin-bottom-20 passinput\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\n                        </div>\n                        <div className=\"col-9 chkbox\">\n                            <div className=\"idstore\">\n                                <input type=\"checkbox\" id=\"idcheck\"></input>&nbsp;\n                            <label htmlFor=\"idcheck\"><span></span>아이디 저장</label>\n                            </div>\n                            <div className=\"autologin\">\n                                <input type=\"checkbox\" id=\"autocheck\"></input>&nbsp;\n                            <label htmlFor=\"autocheck\"><span></span>자동 로그인</label>\n                            </div>\n                        </div>\n                        <div className=\"loginset\">\n                            <div className=\"col-9 defaultlogin\" onClick ={this.handleClick}>로 그 인</div>\n                            <div className=\"col-9 naverlogin\">네이버 로그인</div>\n                            <div className=\"col-9 googlelogin\" >구글 로그인</div>\n                            <div className=\"col-9 kakaologin\" >카카오 계정 로그인</div>\n                        </div>\n                        <div className=\"col-9 usermenu\">\n                            <ul>\n                                <li>\n                                    <a href=\"/find\">\n                                        <img src=\"img/find.png\" alt=\"아이디 찾기\"></img><br />\n                                    아이디 / 비밀번호 찾기\n                                </a>\n                                </li>\n                                <li>\n                                    <a href=\"/join\">\n                                        <img src=\"img/join.png\" alt=\"회원 가입\"></img><br />\n                                    회원 가입\n                                </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Leeting.js",["183"],"import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"./Slider.css\";\r\nimport \"./Leeting.css\";\r\n\r\nclass Leeting extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"leeting_content\">\r\n                <div id=\"tit1\">\r\n                    <p className=\"title\">Leeting<span>.</span></p>\r\n                    <p className=\"subtit\">당신이 찾는<br />모든 랜선 그룹</p>\r\n                    <p className=\"highlight\">Leeting 웹 이용하기</p>\r\n                </div>\r\n                <div id=\"tit2\">\r\n                    <p className=\"title\">웹 하나로 끝내는<br /><span>Leeting 모집</span></p>\r\n                    <p className=\"subtit\"><span>어뷰징 시스템</span>을 통해 엄선된 리팅을 볼 수 있어요.<br />익명의 그룹에 시간을 소비하지 마세요!</p>\r\n                    <img src=\"img/leeting2.png\" alt=\"리팅 모바일 ver\"></img>\r\n                </div>\r\n                <div id=\"tit3\">\r\n                    <p className=\"title\">내가 가장<br /><span>관심있는 카테고리</span></p>\r\n                    <p className=\"subtit\">내가 어떤 카테고리가 관심있는지<br /><span>Leeting이 직접 통계를 구해줄게요!</span></p>\r\n                </div>\r\n                <div id=\"tit4\">\r\n                    <p className=\"title\">매일, 직접 선별합니다.<br /><span>Leeting 크루의 큐레이션</span></p>\r\n                    <p className=\"subtit\">사용자들에게 힘이 되었으면 하는 마음으로<br /> 리팅 크루들은 매일 좋은 리팅을 확인하고 있어요.</p>\r\n                    <img src=\"img/leeting4.png\" alt=\"리팅 크루\"></img>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Leeting;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\NotFound.js",["184","185"],"import React, { useEffect } from 'react';\nimport \"./NotFound.css\"\n\nfunction NotFound({ history }) {\n    const goBack = () => {\n        history.goBack();\n    };\n    const goHome = () => {\n        history.push('/');\n      };\n    \n      useEffect(() => {\n        console.log(history);\n        const unblock = history.block('정말 떠나실건가요?');\n        return () => {\n          unblock();\n        };\n      }, [history]);\n    \n    return (\n        <div className='notFoundCon'>\n            <img src=\"../img/404error.png\" alt=\"404에러\"></img>\n            <p className=\"tit\">페이지를 <span>찾을 수 없습니다.</span><br />\n            (404 Not Found)</p>\n            <p className=\"subtit\">페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.<br />\n            입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\n\n            <div className=\"btndiv\">\n                <a className=\"goBack\" onClick={goBack}>이전 화면</a>\n                <a className=\"goHome\" onClick={goHome}>홈으로</a>\n            </div>\n        </div>\n    );\n}\n\nexport default NotFound;","P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\exercise.js",["186"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\Detail.js",["187"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\exercise.js",["188","189","190","191","192","193"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\music.js",["194","195","196","197","198","199"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\game.js",["200","201","202","203","204","205"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\lans.js",["206","207","208","209","210","211"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\diy.js",["212","213","214","215","216","217"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\meeting\\js\\study.js",["218","219","220","221","222","223"],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\game.js",["224"],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\music.js",["225"],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\lans.js",["226"],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\diy.js",["227"],"P:\\Leeting\\working\\FrontEnd\\src\\components\\meeting\\study.js",["228"],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":13,"column":39,"nodeType":"235","endLine":13,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":14,"column":41,"nodeType":"235","endLine":14,"endColumn":69},{"ruleId":"233","severity":1,"message":"234","line":15,"column":39,"nodeType":"235","endLine":15,"endColumn":67},{"ruleId":"236","severity":1,"message":"237","line":16,"column":21,"nodeType":"235","endLine":16,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":32,"column":25,"nodeType":"235","endLine":32,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":35,"column":25,"nodeType":"235","endLine":35,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":38,"column":25,"nodeType":"235","endLine":38,"endColumn":38},{"ruleId":"238","severity":1,"message":"239","line":31,"column":28,"nodeType":"240","messageId":"241","endLine":31,"endColumn":30},{"ruleId":"238","severity":1,"message":"239","line":91,"column":51,"nodeType":"240","messageId":"241","endLine":91,"endColumn":53},{"ruleId":"242","severity":1,"message":"243","line":169,"column":46,"nodeType":"244","messageId":"245","endLine":169,"endColumn":47,"suggestions":"246"},{"ruleId":"242","severity":1,"message":"243","line":278,"column":46,"nodeType":"244","messageId":"245","endLine":278,"endColumn":47,"suggestions":"247"},{"ruleId":"236","severity":1,"message":"237","line":413,"column":19,"nodeType":"235","endLine":413,"endColumn":56},{"ruleId":"238","severity":1,"message":"239","line":11,"column":32,"nodeType":"240","messageId":"241","endLine":11,"endColumn":34},{"ruleId":"236","severity":1,"message":"248","line":29,"column":17,"nodeType":"235","endLine":29,"endColumn":56},{"ruleId":"236","severity":1,"message":"248","line":30,"column":17,"nodeType":"235","endLine":30,"endColumn":56},{"ruleId":"249","severity":1,"message":"250","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":14},{"ruleId":"229","replacedBy":"253"},{"ruleId":"231","replacedBy":"254"},{"ruleId":"236","severity":1,"message":"237","line":41,"column":29,"nodeType":"235","endLine":41,"endColumn":41},{"ruleId":"236","severity":1,"message":"248","line":53,"column":33,"nodeType":"235","endLine":53,"endColumn":58},{"ruleId":"236","severity":1,"message":"237","line":68,"column":33,"nodeType":"235","endLine":68,"endColumn":46},{"ruleId":"236","severity":1,"message":"237","line":71,"column":33,"nodeType":"235","endLine":71,"endColumn":46},{"ruleId":"238","severity":1,"message":"239","line":173,"column":32,"nodeType":"240","messageId":"241","endLine":173,"endColumn":34},{"ruleId":"238","severity":1,"message":"239","line":198,"column":32,"nodeType":"240","messageId":"241","endLine":198,"endColumn":34},{"ruleId":"238","severity":1,"message":"239","line":32,"column":28,"nodeType":"240","messageId":"241","endLine":32,"endColumn":30},{"ruleId":"238","severity":1,"message":"239","line":92,"column":51,"nodeType":"240","messageId":"241","endLine":92,"endColumn":53},{"ruleId":"242","severity":1,"message":"243","line":170,"column":46,"nodeType":"244","messageId":"245","endLine":170,"endColumn":47,"suggestions":"255"},{"ruleId":"242","severity":1,"message":"243","line":270,"column":46,"nodeType":"244","messageId":"245","endLine":270,"endColumn":47,"suggestions":"256"},{"ruleId":"236","severity":1,"message":"237","line":471,"column":19,"nodeType":"235","endLine":471,"endColumn":56},{"ruleId":"233","severity":1,"message":"234","line":13,"column":39,"nodeType":"235","endLine":13,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":14,"column":41,"nodeType":"235","endLine":14,"endColumn":69},{"ruleId":"233","severity":1,"message":"234","line":15,"column":39,"nodeType":"235","endLine":15,"endColumn":67},{"ruleId":"238","severity":1,"message":"257","line":21,"column":34,"nodeType":"240","messageId":"241","endLine":21,"endColumn":36},{"ruleId":"249","severity":1,"message":"250","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":14},{"ruleId":"236","severity":1,"message":"248","line":29,"column":17,"nodeType":"235","endLine":29,"endColumn":56},{"ruleId":"236","severity":1,"message":"248","line":30,"column":17,"nodeType":"235","endLine":30,"endColumn":56},{"ruleId":"249","severity":1,"message":"258","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"259","severity":1,"message":"260","line":42,"column":29,"nodeType":"235","endLine":42,"endColumn":113},{"ruleId":"249","severity":1,"message":"258","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"248","line":55,"column":69,"nodeType":"235","endLine":55,"endColumn":72},{"ruleId":"236","severity":1,"message":"248","line":56,"column":67,"nodeType":"235","endLine":56,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":57,"column":65,"nodeType":"235","endLine":57,"endColumn":68},{"ruleId":"236","severity":1,"message":"248","line":58,"column":67,"nodeType":"235","endLine":58,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":59,"column":69,"nodeType":"235","endLine":59,"endColumn":72},{"ruleId":"249","severity":1,"message":"258","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"248","line":55,"column":88,"nodeType":"235","endLine":55,"endColumn":91},{"ruleId":"236","severity":1,"message":"248","line":56,"column":67,"nodeType":"235","endLine":56,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":57,"column":65,"nodeType":"235","endLine":57,"endColumn":68},{"ruleId":"236","severity":1,"message":"248","line":58,"column":67,"nodeType":"235","endLine":58,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":59,"column":69,"nodeType":"235","endLine":59,"endColumn":72},{"ruleId":"249","severity":1,"message":"258","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"248","line":55,"column":69,"nodeType":"235","endLine":55,"endColumn":72},{"ruleId":"236","severity":1,"message":"248","line":56,"column":86,"nodeType":"235","endLine":56,"endColumn":89},{"ruleId":"236","severity":1,"message":"248","line":57,"column":65,"nodeType":"235","endLine":57,"endColumn":68},{"ruleId":"236","severity":1,"message":"248","line":58,"column":67,"nodeType":"235","endLine":58,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":59,"column":69,"nodeType":"235","endLine":59,"endColumn":72},{"ruleId":"249","severity":1,"message":"258","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"248","line":55,"column":69,"nodeType":"235","endLine":55,"endColumn":72},{"ruleId":"236","severity":1,"message":"248","line":56,"column":67,"nodeType":"235","endLine":56,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":57,"column":65,"nodeType":"235","endLine":57,"endColumn":68},{"ruleId":"236","severity":1,"message":"248","line":58,"column":86,"nodeType":"235","endLine":58,"endColumn":89},{"ruleId":"236","severity":1,"message":"248","line":59,"column":69,"nodeType":"235","endLine":59,"endColumn":72},{"ruleId":"249","severity":1,"message":"258","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"248","line":55,"column":69,"nodeType":"235","endLine":55,"endColumn":72},{"ruleId":"236","severity":1,"message":"248","line":56,"column":67,"nodeType":"235","endLine":56,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":57,"column":84,"nodeType":"235","endLine":57,"endColumn":87},{"ruleId":"236","severity":1,"message":"248","line":58,"column":67,"nodeType":"235","endLine":58,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":59,"column":69,"nodeType":"235","endLine":59,"endColumn":72},{"ruleId":"249","severity":1,"message":"258","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"248","line":55,"column":69,"nodeType":"235","endLine":55,"endColumn":72},{"ruleId":"236","severity":1,"message":"248","line":56,"column":67,"nodeType":"235","endLine":56,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":57,"column":65,"nodeType":"235","endLine":57,"endColumn":68},{"ruleId":"236","severity":1,"message":"248","line":58,"column":67,"nodeType":"235","endLine":58,"endColumn":70},{"ruleId":"236","severity":1,"message":"248","line":59,"column":88,"nodeType":"235","endLine":59,"endColumn":91},{"ruleId":"249","severity":1,"message":"258","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"258","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"258","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"258","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"258","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\*.","Literal","unnecessaryEscape",["263","264"],["265","266"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar",["261"],["262"],["267","268"],["269","270"],"Expected '===' and instead saw '=='.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"messageId":"271","fix":"272","desc":"273"},{"messageId":"274","fix":"275","desc":"276"},{"messageId":"271","fix":"277","desc":"273"},{"messageId":"274","fix":"278","desc":"276"},{"messageId":"271","fix":"279","desc":"273"},{"messageId":"274","fix":"280","desc":"276"},{"messageId":"271","fix":"281","desc":"273"},{"messageId":"274","fix":"282","desc":"276"},"removeEscape",{"range":"283","text":"284"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"285","text":"286"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"287","text":"284"},{"range":"288","text":"286"},{"range":"289","text":"284"},{"range":"290","text":"286"},{"range":"291","text":"284"},{"range":"292","text":"286"},[6102,6103],"",[6102,6102],"\\",[10461,10462],[10461,10461],[6122,6123],[6122,6122],[9974,9975],[9974,9974]]